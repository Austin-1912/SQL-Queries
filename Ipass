CREATE OR REPLACE TABLE LACA_RNT_CUSTOMERS AS
WITH params AS (
  SELECT 12 AS rnt_window_mths
),
-- Generate months from Jan 2025 up to the last completed month

months AS (
  SELECT DISTINCT DATE_TRUNC('MONTH', MTH_YR) AS ref_date
  FROM WUDNA.CEX_SANDBOX.VA_KPI_2020_2
  WHERE MTH_YR >= TO_DATE('2025-01-01')
    AND MTH_YR < DATE_TRUNC('MONTH', CURRENT_DATE)
),

-- Registered customers
cust_reg AS (
  SELECT
    c.customer_key,
    DATE_TRUNC('MONTH', c.first_registration_date) AS reg_month,
    c.country_code
  FROM SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW c
  JOIN SUMMARY_GEN.COUNTRY_VW cnt
    ON c.country_code = cnt.country_code
  WHERE cnt.super_region = 'LACA'
    AND c.first_registration_date IS NOT NULL
),
-- Transactions
txns_rnt AS (
  SELECT DISTINCT
    t.sndcustomer_key AS customer_key,
    DATE_TRUNC('MONTH', t.rcvpaying_datetime) AS txn_month
  FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW t
  JOIN SUMMARY_GEN.COUNTRY_VW snd
    ON t.sndcountry_code = snd.country_code
  WHERE snd.super_region = 'LACA'
    AND t.rcvpaying_datetime >= '2021-01-01'
    AND t.rcvpaying_datetime < DATE_TRUNC('MONTH', SYSDATE())
),
-- RNT logic: registered in R12 window and no transactions in same R12 window
rnt_no_txn AS (
  SELECT
    m.ref_date,
    r.customer_key,
    r.country_code,
    r.reg_month
  FROM months m
  JOIN cust_reg r
    ON r.reg_month BETWEEN DATEADD(MONTH, - (SELECT rnt_window_mths FROM params) + 1, m.ref_date)
                      AND m.ref_date
  LEFT JOIN txns_rnt t
    ON r.customer_key = t.customer_key
   AND t.txn_month BETWEEN DATEADD(MONTH, - (SELECT rnt_window_mths FROM params) + 1, m.ref_date)
                      AND m.ref_date
  WHERE t.customer_key IS NULL
)
-- Final RNT customer table
SELECT DISTINCT
  rnt.ref_date,
  rnt.customer_key,
  rnt.country_code,
  rnt.reg_month,
  'Y' AS rnt_flag
FROM rnt_no_txn rnt;

 
-----------------------------------------------------------------------------------
-- STEP 2: Engagement + Corridor Customers Table
-----------------------------------------------------------------------------------
CREATE OR REPLACE TABLE LACA_ENGAGEMENT_CORRIDOR_CUSTOMERS AS
SELECT
  e.sndcustomer_key                                AS customer_key,
  e.country_code,
  DATE_TRUNC('MONTH', e.mth_yr)                    AS ref_date,
  e.r12_txns,
  CASE WHEN e.r12_txns > 0 THEN 'Y' ELSE 'N' END   AS r12_active,
  e.r6_txns,
  CASE WHEN e.r6_txns = 0 AND e.r12_txns > 0 THEN 'Y' ELSE 'N' END AS active_churn_r7_r12,
  e.pr12_txns,
  e.ppr12_txns,
  CASE WHEN e.r12_txns = 0 AND (e.pr12_txns > 0 OR e.ppr12_txns > 0) THEN 'Y' ELSE 'N' END AS lapsed_r12_plus,
  e.email_marketable,
  e.sms_marketable,
  CASE WHEN e.R12_App_txns >0 THEN 'Y' ELSE 'N' END AS app_marketable_flag,
  e.retail_digital_flag,
  e.r12_dominant_channel,
  d.dominant_corridor_name,
  d.dominant_sndcountry_name,
  d.dominant_rcvcountry_name,
  d.dominant_pricing_channel,
  'N' AS rnt_flag
FROM WUDNA.CEX_SANDBOX.YN_VA_KPI_2020_OUTPUT_ENGAGEMENT_CUST_LEVEL e
JOIN SUMMARY_GEN.COUNTRY_VW c
  ON e.country_code = c.country_code
 AND c.super_region = 'LACA'
LEFT JOIN WUDNA.CEX_SANDBOX.SK_DOMINANCY_METRICS d
  ON e.sndcustomer_key = d.sndcustomer_key
 AND e.mth_yr = d.mth_yr
;
 
-----------------------------------------------------------------------------------
-- STEP 3: Union RNT + Engagement into Final Segmentation Table
-----------------------------------------------------------------------------------
CREATE OR REPLACE TABLE LACA_MONTHLY_CUSTOMER_SEGMENTATION AS
SELECT
  e.customer_key,
  e.country_code,
  e.ref_date,
  e.r12_txns,
  e.r12_active,
  e.r6_txns,
  e.active_churn_r7_r12,
  e.pr12_txns,
  e.ppr12_txns,
  e.lapsed_r12_plus,
  e.email_marketable,
  e.sms_marketable,
  e.app_marketable_flag,
  e.retail_digital_flag,
  e.r12_dominant_channel,
  e.dominant_corridor_name,
  e.dominant_sndcountry_name,
  e.dominant_rcvcountry_name,
  e.dominant_pricing_channel,
  e.rnt_flag
FROM LACA_ENGAGEMENT_CORRIDOR_CUSTOMERS e
 
UNION ALL
 
SELECT
  r.customer_key,
  r.country_code,
  r.ref_date,
  0 AS r12_txns,
  'N' AS r12_active,
  0 AS r6_txns,
  'N' AS active_churn_r7_r12,
  0 AS pr12_txns,
  0 AS ppr12_txns,
  'N' AS lapsed_r12_plus,
  'N' AS email_marketable,
  'N' AS sms_marketable,
  0 AS app_marketable_flag,
  'N' AS retail_digital_flag,
  NULL AS r12_dominant_channel,
  NULL AS dominant_corridor_name,
  NULL AS dominant_sndcountry_name,
  NULL AS dominant_rcvcountry_name,
  NULL AS dominant_pricing_channel,
  r.rnt_flag
FROM LACA_RNT_CUSTOMERS r
;
 
-----------------------------------------------------------------------------------
-- STEP 4: Aggregate Table for Power BI
-----------------------------------------------------------------------------------

CREATE OR REPLACE TABLE LACA_MONTHLY_CUSTOMER_SEGMENTATION_AGG AS
WITH corridor_ranked_raw AS (
  SELECT
    ref_date,
    dominant_corridor_name,
    RANK() OVER (
      PARTITION BY ref_date
      ORDER BY COUNT(DISTINCT customer_key) DESC
    ) AS corridor_rank
  FROM LACA_MONTHLY_CUSTOMER_SEGMENTATION
  GROUP BY ref_date, dominant_corridor_name
),
segmented_raw AS (
  SELECT
    s.*,
    CASE 
      WHEN cr.corridor_rank <= 10 THEN s.dominant_corridor_name
      ELSE 'Others'
    END AS corridor_bucket
  FROM LACA_MONTHLY_CUSTOMER_SEGMENTATION s
  LEFT JOIN corridor_ranked_raw cr
    ON s.ref_date = cr.ref_date
   AND s.dominant_corridor_name = cr.dominant_corridor_name
)
SELECT
  ref_date,
  corridor_bucket,
  dominant_sndcountry_name,
  dominant_rcvcountry_name,
  r12_dominant_channel,
  email_marketable,
  sms_marketable,
  app_marketable_flag,
  retail_digital_flag,
  rnt_flag,
  COUNT(DISTINCT customer_key) AS customer_count,
  SUM(r12_txns) AS total_r12_txns,
  SUM(r6_txns) AS total_r6_txns,
  SUM(pr12_txns) AS total_pr12_txns,
  SUM(ppr12_txns) AS total_ppr12_txns
FROM segmented_raw
GROUP BY
 ALL;
