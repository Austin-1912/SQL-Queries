import os

import pyodbc
 
DB_CONFIG = {

    'SQL_SERVER': 'SRVWUDEN0890V',

    'SQL_DB': 'ACVSCore',

    'SQL_USER': 'GSOC_Test',

    'SQL_PASSWORD': 'Westerngsoc@2025',

    'trusted_connection': False

}
 
FILE_PATHS = {

    'excel_file_1': r"C:\Users\W0019058\OneDrive - Western Union\Desktop\CCURE-Comparison\data\Active Contractors Sheet.xls",

    'excel_file_2': r"C:\Users\W0019058\OneDrive - Western Union\Desktop\CCURE-Comparison\data\Active Employees sheet.xlsx",

    'output_report': r"C:\Users\W0019058\OneDrive - Western Union\Desktop\CCURE-Comparison\data\comparison_report.xlsx"

}
 
def get_sql_connection(SQL_SERVER, SQL_DB, SQL_USER, SQL_PASSWORD):

    try:

        return pyodbc.connect(

            f"DRIVER={{ODBC Driver 17 for SQL Server}};"

            f"SERVER={SQL_SERVER};DATABASE={SQL_DB};UID={SQL_USER};PWD={SQL_PASSWORD}"

        )

    except Exception as e:

        print(f"Connection error for server {SQL_SERVER}: {e}")

        return None
 
def build_sql_query():

    return """

      SELECT DISTINCT
    AP.ObjectID AS "AccountName",
    AP.Name AS "Emp Name",
	CASE AP.Int1
        WHEN 0 THEN AP.Text12
        ELSE CAST(AP.Int1 AS NVARCHAR)
    END AS "EmployeeID",
	AP.text9 AS Temp_Badge_No,
    PT.Name AS "PersonnelType",
	Text10 AS Manager_Name,
	Int4 As Manager_WU_ID
FROM
    ACVSCore.Access.Personnel AP
    Full JOIN ACVSCore.Access.Credential ACR ON AP.Name = ACR.Name
    Full JOIN ACVSCore.Access.PersonnelType PT ON PT.ObjectID = AP.PersonnelTypeID
WHERE
    AP.Disabled = 0
ORDER BY
    "AccountName" ASC;

    """
 
def check_alerts_for_server(server_config):

    print("ENTERED check_alert function")

    conn = get_sql_connection(server_config['SQL_SERVER'], server_config['SQL_DB'], server_config['SQL_USER'], server_config['SQL_PASSWORD'])

    if not conn:

        return

    try:

        cursor = conn.cursor()

        cursor.execute(build_sql_query())
 
        rows = cursor.fetchall()

        if not rows:

            print("No new alerts")

            return
 
        columns = [desc[0] for desc in cursor.description]
 
        for row in rows:

            data = dict(zip(columns, row))

            print(data)
 
    except Exception as e:

        print(f"Error executing sql query: {e}")
 
    finally:

        conn.close()
 
# Call the function to test

check_alerts_for_server(DB_CONFIG)
 
