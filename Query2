create or replace procedure Customer_Engagement_Framework_Combined()
    returns string
    language javascript
    strict
    execute as caller
    as
    $$

var sql_command_1 = `SET R13_Start_date = DATEADD(MONTH,-15, LAST_DAY(GETDATE())+1)`; 
var sql_command_2 = `SET R13_End_date = DATEADD(MONTH,-2, LAST_DAY(GETDATE())+1)`;


var sql_command_3 =
`CREATE OR REPLACE TABLE CUSTOMER_ENGAGEMENT_FRAMEWORK_AGGREGATED_DATASET_BACKUP_FEB AS 
SELECT * FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_AGGREGATED_DATASET`;


var sql_command_4 =
`CREATE OR REPLACE TABLE CEF_GROWTH_RATE_CUST_LEVEL_DATA_AGGREGATED_BACKUP_FEB AS
SELECT * FROM CEF_GROWTH_RATE_CUST_LEVEL_DATA_AGGREGATED`;

var sql_command_5 =
`CREATE OR REPLACE TABLE SJ_MEASUREMENT_CUST_LEVEL_BACKUP AS 
SELECT * FROM SJ_MEASUREMENT_CUST_LEVEL`;


var sql_command_6 =
`CREATE OR REPLACE TABLE CHURN_ANALYSIS_COMPETITOR_FEE_FX_PRICING_DATA_BACKUP_FEB AS
SELECT * FROM CHURN_ANALYSIS_COMPETITOR_FEE_FX_PRICING_DATA`;


var sql_command_7 =
`CREATE OR REPLACE TABLE CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS_SUMMARY_BACKUP_FEB AS
SELECT * FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS_SUMMARY`;


var sql_command_8 =
`CREATE OR REPLACE TABLE R2D_Model_Analysis_BACKUP_FEB AS
SELECT * FROM R2D_Model_Analysis`;


var sql_command_9 = 
`CREATE OR REPLACE TABLE CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_1_BACKUP AS
SELECT * FROM CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_1`;


var sql_command_10 = `CREATE OR REPLACE TABLE CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL AS
 SELECT * FROM (
 SELECT *,ROW_NUMBER() OVER(PARTITION BY MTH_YR ,SNDCUSTOMER_KEY ORDER BY MTH_YR) AS RNK
 FROM (
 WITH CUSTOMER_LEVEL_INFO AS ( 
  SELECT 
  distinct                            
  CEM.SNDCUSTOMER_KEY,
  CEM.MTH_YR,
  CEM.NEW_EXISTING_FLAG,
  NVL(CEM.HVC_FLAG,'N') AS HVC_FLAG,
  NVL(CEM.LOYALTY_MEMBER_FLAG,'N') AS LOYALTY_MEMBER_FLAG,
  CASE WHEN CEM.FLAG_CONTACTABLE = 'Y' THEN 'Contactable' ELSE 'Non-Contactable' END AS FLAG_CONTACTABLE,
  CASE WHEN CEM.FLAG_MARKETABLE = 'Y' THEN 'Marketable' ELSE 'Non-Marketable' END AS FLAG_MARKETABLE,
  CEM.EMAIL_MARKETABLE,
  SMS_MARKETABLE,
  CEM.COUNTRY_CODE,
  NVL(SUPER_REGION,'N/A') AS REGION,
  CN.COUNTRY_NAME,
  CD.DMA AS CUSTOMER_DMA,
  CASE WHEN CEM.MYWU_STATUS = 'Member_Redeemer' THEN 'Member Redeemer'
	   WHEN CEM.MYWU_STATUS = 'Member_Non_Redeemer' THEN 'Member Non-Redeemer'
	   ELSE 'Non Member' END AS MYWU_STATUS,
  R12_TXN_FREQ_BUCKET,
  CASE WHEN R12_DOMINANT_CHANNEL IN ('APP', 'WEBSITE') THEN 'Digital'
	   WHEN R12_DOMINANT_CHANNEL = 'RETAIL' THEN 'Retail'
	   ELSE 'R12 Inactive' END AS DOMINANT_CHANNEL,
  CASE WHEN CEM.RETAIL_DIGITAL_FLAG = 'Digital_only' THEN 'Digital Only' 
       WHEN CEM.RETAIL_DIGITAL_FLAG = 'Retail_only' THEN 'Retail Only'
	   WHEN CEM.RETAIL_DIGITAL_FLAG = 'Retail+Digital' THEN 'Retail+Digital'
	   ELSE 'R12 Inactive' END AS NATIVE_CHANNEL,
  CD.OPT_SHARE,
  CASE WHEN CD.OPT_SHARE = 'I' THEN 'Y' ELSE 'N' END AS OPT_3RD_PARTY, 
  R1_TXNS,
  R2_TXNS,
  R3_TXNS,
  R2_TXNS + R3_TXNS AS R2_R3_TXNS,
  R6_TXNS,
  R6_TXNS - R3_TXNS AS R4_R6_TXNS,
  R12_TXNS,
  R12_TXNS- R6_TXNS AS R7_R12_TXNS,
  
  CUSTOMER_TENURE_IN_MONTHS,
  
  CASE WHEN R1_TXNS > 0 THEN 'Y' ELSE 'N' END AS R1_ACTIVE,
  CASE WHEN R3_TXNS > 0 THEN 'Y' ELSE 'N' END AS R3_ACTIVE,
  CASE WHEN R6_TXNS > 0 THEN 'Y' ELSE 'N' END AS R6_ACTIVE,
  CASE WHEN R12_TXNS > 0 THEN 'Y' ELSE 'N' END AS R12_ACTIVE,
  
  CASE WHEN R1_TXNS = 0 AND R3_TXNS > 0 THEN 'Y' ELSE 'N' END AS R2_R3_ACTIVE,
  CASE WHEN R3_TXNS = 0 AND R6_TXNS > 0 THEN 'Y' ELSE 'N' END AS R4_R6_ACTIVE,
  CASE WHEN R6_TXNS = 0 AND R12_TXNS > 0 THEN 'Y' ELSE 'N' END AS R7_R12_ACTIVE,
  
  CASE WHEN R1_ACTIVE = 'Y' THEN 'R1 ACTIVE'
       WHEN R2_R3_ACTIVE = 'Y' THEN 'R2-R3 ACTIVE'
       WHEN R4_R6_ACTIVE = 'Y' THEN 'R4-R6 ACTIVE'
       WHEN R7_R12_ACTIVE = 'Y' THEN 'R7-R12 ACTIVE'
       END AS ACTIVITY_STATUS,
  
  R12_WEBSITE_TXNS,
  R12_APP_TXNS,
  CASE WHEN R12_APP_TXNS > 0 THEN 'Y' ELSE 'N' END AS APP_MARKETABLE_FLAG,
  R12_RETAIL_TXNS,
  R12_AIR_TXNS,
  CASE WHEN APP_MARKETABLE_FLAG = 'Y' AND OPT_3RD_PARTY = 'Y' THEN 'APP + Social'
       WHEN APP_MARKETABLE_FLAG = 'Y' AND OPT_3RD_PARTY = 'N' THEN 'APP Only'
       WHEN APP_MARKETABLE_FLAG = 'N' AND OPT_3RD_PARTY = 'Y' THEN 'Social Only'
       ELSE 'Non Marketable' END AS APP_SOCIAL_MEDIA_MARKETABLE,
  R1_APP_TXNS,
  CASE WHEN EMAIL_MARKETABLE = 'Y' AND SMS_MARKETABLE = 'N' THEN 'Email Only' 
       WHEN SMS_MARKETABLE = 'Y' AND EMAIL_MARKETABLE = 'N' THEN 'SMS Only'
       WHEN SMS_MARKETABLE = 'Y' AND EMAIL_MARKETABLE = 'Y' THEN 'SMS + Email'
       ELSE 'Non Marketable' END AS EMAIL_SMS_MARKETABLE,
  
  CASE WHEN CEM.FLAG_MARKETABLE = 'Y' OR OPT_3RD_PARTY = 'Y' OR APP_MARKETABLE_FLAG  = 'Y' THEN 'Y' 
  ELSE 'N' END AS CEM_MARKETABILITY,
  
  R12_PRINCIPAL,
  R12_FEE,
  R12_NET_FX,
  R12_REVENUE,
  
CASE WHEN MK.EQUAL_DENSITY_DECILE in (9,10) then 'HIGH'
     WHEN MK.EQUAL_DENSITY_DECILE in (1,2,3,4,5,6,7,8) then 'LOW'
     ELSE  'N/A' END AS PRICE_CHURN_BUCKET,

CASE WHEN MK.EQUAL_DENSITY_DECILE in (9,10) then 'Y'
     WHEN MK.EQUAL_DENSITY_DECILE in (1,2,3,4,5,6,7,8) then 'N'
     ELSE  'N/A' END AS PRICE_SENSITIVE,

  R2_TO_R13_TXNS,
  R14_TO_R25_TXNS,
  R26_TO_R37_TXNS,
  R48_TXNS,
  R48_TXNS - R26_TO_R37_TXNS AS R38_R48_TXNS,
  
  FREQUENCY,
  MONETARY,
  RFM_SCORE,
  RFM_PERSONA,
  CHURN_SCORES,
  R2D_SCORES,
   
  CASE 
  WHEN R2D_DECILE in (1,2,3,4,5) THEN '3: Low' 
  WHEN R2D_DECILE in (6,7,8) THEN '2: Medium'
  WHEN R2D_DECILE in (9,10) THEN '1: High' 
  ELSE '4: NA' END AS R2D_PROPENSITY,
   
  RESIDUAL_LIFE_IN_DAYS,

  RFM_DECILE,
  R2D_DECILE,
  CHURN_DECILE,
  REALIZED_CLTV_DECILE,
  RESIDUAL_CLTV_DECILE,
  TOTAL_CLTV_DECILE,

  CEM.IPF_CHANGE AS IPF_CHANGE,
  CEM.BEATS AS IPF_BEATS,
  CASE WHEN CHURN_DECILE IN (1,2,3,4,5,6,7,8) THEN '2.Low-Risk' 
       WHEN CHURN_DECILE IN (9,10)  THEN '1.High-Risk'
     ELSE 
           CASE WHEN IPF_BEATS IN ('On Schedule','Ahead Schedule','1 beat late','2 beats late') THEN '2.Low-Risk'
                WHEN IPF_BEATS IN ('3 beats late','4 beats late','5 beats plus late') THEN '1.High-Risk'
                ELSE 
                     CASE WHEN RFM_PERSONA IN ('7.LOST','5.SPORADICS','6.SLIPPING') THEN '1.High-Risk'
                          WHEN RFM_PERSONA IN ('4.WHALES','2.LOYALS','1.UBER','3.PROMISING','8.ONE AND DONES') THEN '2.Low-Risk'
                     ELSE '4: NA' END
                END
END AS CHURN_RISK,
CASE WHEN RFM_DECILE IN (1,2,3) THEN '3.Low-Value'
       WHEN RFM_DECILE IN (4,5,6) THEN '2.Medium-Value'
       WHEN RFM_DECILE IN (7,8,9,10) THEN '1.High-Value'
       WHEN RFM_DECILE IN (999) THEN '4.NA'
       ELSE '4.NA' END AS VALUED_SEGMENT_RFM,
       
 CASE WHEN  CHURN_RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '1.HIGH VALUE-HIGH RISK'
     WHEN  CHURN_RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '2. MEDIUM VALUE-HIGH RISK'
     WHEN  CHURN_RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '3. LOW VALUE-HIGH RISK'
     WHEN  CHURN_RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '4. HIGH VALUE-LOW RISK'
     WHEN  CHURN_RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '5. MEDIUM VALUE-LOW RISK'
     WHEN  CHURN_RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '6. LOW VALUE-LOW RISK'
     ELSE '0. NA' END AS RISK_VALUE_SEGMENT,
  
  NVL(DOMINANT_AGENT_NETWORK_2,DOMINANT_AGENT_BUSINESS_NAME) AS DOMINANT_AGENT_NETWORK,
  DOMINANT_CORRIDOR,
  DOMINANT_CORRIDOR_TYPE,
  DOMINANT_CORRIDOR_NAME,
  DOMINANT_ATTRBUTE_FUNDS_IN AS DOMINANT_PAY_IN_METHOD,
  DOMINANT_ATTRBUTE_FUNDS_OUT AS DOMINANT_PAYOUT_METHOD,
  DOMINANT_COMPANY_BRAND,
  DOMINANT_PRICING_CHANNEL,
  DOMINANT_PRINCIPAL_BAND,
  DOMINANT_ATTRBUTE_FUNDS_IN AS DOMINANT_FUNDS_IN,
  DOMINANT_ATTRBUTE_FUNDS_OUT AS DOMINANT_FUNDS_OUT,
  CASE WHEN DOMINANT_PRICING_CHANNEL IN ('POS','TMT','AIR') THEN 'RETAIL' 
     WHEN DOMINANT_PRICING_CHANNEL IN ('WEB','APP') THEN 'DIGITAL' END AS DOMINANT_TXN_CHANNEL,
  
  AVAILABLE_POINTS,
  CASE WHEN AVAILABLE_POINTS >= NVL(MIN_POINTS,0) THEN 'Y' ELSE 'N' END AS MIN_POINTS_TO_REDEEM, 
  CASE WHEN AVAILABLE_POINTS >= NVL(MAX_POINTS,500) THEN 'Y' ELSE 'N' END AS MAX_POINTS_TO_REDEEM 
  
  FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level CEM
  LEFT JOIN (SELECT
				CUSTOMER_KEY,
                OPT_SHARE,
				HVC_FLAG,
                LOYALTY_MEMBER_FLAG,
				NVL(STATE,'N/A') AS STATE,
				NVL(CITY,'N/A') AS CITY,
				NVL(ZIP_CODE,'N/A') AS ZIP_CODE,
				NVL(ZIP.DMA_CODE,'N/A') AS DMA_CODE,
				NVL(DMA_DESC,'N/A') AS DMA
			 FROM SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM 
                LEFT JOIN SUMMARY_GEN.DMA_ZIPCODE_VW ZIP ON CM.ZIP_POSTAL_CODE = ZIP.ZIP_CODE
				LEFT JOIN SUMMARY_GEN.DMA_VW DMA ON ZIP.DMA_CODE = DMA.DMA_CODE) CD ON CEM.SNDCUSTOMER_KEY = CD.CUSTOMER_KEY 
  LEFT JOIN  SK_CONSOLIDATED_PROPENSITY_SCORES RFM ON RFM.SNDCUSTOMER_KEY = CEM.SNDCUSTOMER_KEY AND RFM.MTH_YR = CEM.MTH_YR
   
   
  LEFT JOIN CEX_SANDBOX.SK_DOMINANCY_METRICS DOM ON CEM.SNDCUSTOMER_KEY = DOM.SNDCUSTOMER_KEY AND CEM.MTH_YR = DOM.MTH_YR
  LEFT JOIN SUMMARY_GEN.COUNTRY_VW CN ON CEM.COUNTRY_CODE = CN.COUNTRY_CODE
  LEFT JOIN CEX_SANDBOX.PRICE_CHURN_SCORE_TABLE MK ON MK.SNDCUSTOMER_KEY = CEM.SNDCUSTOMER_KEY AND MK.MTH_YR = CEM.MTH_YR
  LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CMS ON CEM.SNDCUSTOMER_KEY = CMS.CUSTOMER_KEY
  LEFT JOIN (SELECT 
  DISTINCT 
  B."loyalty_id" SNDCUSTOMER_KEY,
  A."available_balance" AVAILABLE_POINTS FROM "WUDNA"."SUMMARY_GEN"."RCX_MEMBER_PURSES_VW" A
    INNER JOIN "WUDNA"."SUMMARY_GEN"."RCX_LOYALTY_ACTIVITIES_VW" B
    ON A."member_id" = B."member_id" AND UPPER(A."purse_name") = 'POINTS'
          ) AP ON CEM.SNDCUSTOMER_KEY = AP.SNDCUSTOMER_KEY
    LEFT JOIN MYWU_MARKET_LEVEL_MIN_MAX_POINTS_THRESHOLDS CC ON CC.COUNTRY_CODE = CEM.COUNTRY_CODE
  WHERE CEM.MTH_YR IN (SELECT DISTINCT MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level ORDER BY MTH_YR DESC LIMIT 13)
 ),
    CORRIDOR AS (
    SELECT MTH_YR,
    COUNTRY_CODE,
    DOMINANT_CORRIDOR,
	DOMINANT_CORRIDOR_NAME,
    COUNT(1) CUSTOMERS,
    ROW_NUMBER() OVER (PARTITION BY MTH_YR, COUNTRY_CODE ORDER BY COUNT(1) DESC) CORR_RANK,
    CORR_RANK||'.'||DOMINANT_CORRIDOR_NAME AS RANKED_CORR
    FROM CUSTOMER_LEVEL_INFO
 GROUP BY 1,2,3,4
 ORDER BY 3 DESC
)
, TOP_CORRIDOR AS (
  SELECT MTH_YR,
  COUNTRY_CODE,
  NVL(DOMINANT_CORRIDOR_NAME,'NA') AS DOMINANT_CORRIDOR_NAME,
  NVL(DOMINANT_CORRIDOR,'NA') AS DOMINANT_CORRIDOR,
  CUSTOMERS,
  CORR_RANK,
  RANKED_CORR
  FROM CORRIDOR
)

,AGENT AS (
SELECT MTH_YR,
COUNTRY_CODE,
DOMINANT_AGENT_NETWORK,
COUNT(1) CUSTOMERS,
ROW_NUMBER() OVER (PARTITION BY MTH_YR,COUNTRY_CODE ORDER BY COUNT(1) DESC) AGENT_RANK,
AGENT_RANK||'.'||DOMINANT_AGENT_NETWORK AS RANKED_AGENT
FROM CUSTOMER_LEVEL_INFO
  WHERE DOMINANT_PAY_IN_METHOD IN ('CASH')
 GROUP BY 1,2,3
 ORDER BY 3 DESC
)
,TOP_AGENT AS (
  SELECT MTH_YR,
  COUNTRY_CODE,
 DOMINANT_AGENT_NETWORK,
  CUSTOMERS,
  AGENT_RANK,
  RANKED_AGENT
  FROM AGENT
)

, DMA AS (
SELECT MTH_YR,
COUNTRY_CODE,
CUSTOMER_DMA,
COUNT(1) CUSTOMERS,
ROW_NUMBER() OVER (PARTITION BY MTH_YR,COUNTRY_CODE ORDER BY COUNT(1) DESC) DMA_RANK,
DMA_RANK||'.'||CUSTOMER_DMA AS RANKED_DMA
FROM CUSTOMER_LEVEL_INFO
  WHERE 
  COUNTRY_CODE = 'US'
 GROUP BY 1,2,3
 ORDER BY 3 DESC
)
, TOP_DMA AS (
  SELECT MTH_YR,
  COUNTRY_CODE,
  CUSTOMER_DMA,
  CUSTOMERS,
  DMA_RANK,
  RANKED_DMA
  FROM DMA
)

SELECT
T2.*,
RANKED_CORR,
AGENT_RANK,
CORR_RANK,                  

REPLACE(CASE WHEN DMA_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_DMA ELSE 'OTHER' END , SUBSTRING(CASE WHEN DMA_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_DMA ELSE 'OTHER' END , 0, charindex('.',CASE WHEN DMA_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_DMA ELSE 'OTHER' END , 0))) AS TOP_DMA,
REPLACE(CASE WHEN DOMINANT_TXN_CHANNEL = 'RETAIL' AND AGENT_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_AGENT ELSE 'OTHER' END, SUBSTRING(CASE WHEN DOMINANT_TXN_CHANNEL = 'RETAIL' AND AGENT_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_AGENT ELSE 'OTHER' END, 0, charindex('.', CASE WHEN DOMINANT_TXN_CHANNEL = 'RETAIL' AND AGENT_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_AGENT ELSE 'OTHER' END, 0))) AS TOP_AGENT,
REPLACE(CASE WHEN CORR_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_CORR ELSE 'OTHER' END, SUBSTRING(CASE WHEN CORR_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_CORR ELSE 'OTHER' END, 0, charindex('.', CASE WHEN CORR_RANK IN ('1','2','3','4','5','6','7','8','9','10','11') THEN RANKED_CORR ELSE 'OTHER' END, 0))) AS TOP_CORRIDOR

FROM CUSTOMER_LEVEL_INFO T2
LEFT JOIN TOP_DMA DMA ON T2.COUNTRY_CODE = DMA.COUNTRY_CODE AND T2.CUSTOMER_DMA = DMA.CUSTOMER_DMA AND T2.MTH_YR = DMA.MTH_YR
LEFT JOIN TOP_AGENT AG ON T2.COUNTRY_CODE = AG.COUNTRY_CODE AND T2.DOMINANT_AGENT_NETWORK = AG.DOMINANT_AGENT_NETWORK AND T2.MTH_YR = AG.MTH_YR
LEFT JOIN TOP_CORRIDOR CORR ON T2.COUNTRY_CODE = CORR.COUNTRY_CODE AND T2.DOMINANT_CORRIDOR = CORR.DOMINANT_CORRIDOR AND T2.MTH_YR = CORR.MTH_YR))
WHERE RNK = 1`;


var sql_command_11 =  `CREATE OR REPLACE TABLE CUSTOMER_ENGAGEMENT_FRAMEWORK_AGGREGATED_DATASET AS 
  
  SELECT 
  date (MTH_YR) as MTH_YR,
  REGION,
  COUNTRY_CODE,
  COUNTRY_NAME,  
  FLAG_CONTACTABLE,
  FLAG_MARKETABLE,
  OPT_3RD_PARTY AS SMM_MARKETABLE,
  APP_MARKETABLE_FLAG,
  APP_SOCIAL_MEDIA_MARKETABLE,
  EMAIL_SMS_MARKETABLE,
  CEM_MARKETABILITY,
  
  NVL(ACTIVITY_STATUS,'R12_INACTIVE') AS ACTIVITY_STATUS,
  LOYALTY_MEMBER_FLAG,
  MYWU_STATUS,
  NEW_EXISTING_FLAG,
  HVC_FLAG,
  PRICE_SENSITIVE,
  
  
  RFM_PERSONA, 
  R2D_PROPENSITY,
  NVL(IPF_CHANGE,'NO IPF') AS IPF_CHANGE,
  NVL(IPF_BEATS,'NO IPF') AS IPF_BEATS,
  CHURN_RISK,
  VALUED_SEGMENT_RFM,
  RISK_VALUE_SEGMENT,
  
  R12_TXN_FREQ_BUCKET,
  
  TOP_DMA,
  TOP_AGENT,
  TOP_CORRIDOR,
  DOMINANT_CORRIDOR,
  DOMINANT_CORRIDOR_NAME,
  DOMINANT_CORRIDOR_TYPE,
  DOMINANT_PAY_IN_METHOD,
  DOMINANT_PAYOUT_METHOD,
  DOMINANT_COMPANY_BRAND,
  DOMINANT_PRICING_CHANNEL,
  DOMINANT_TXN_CHANNEL,
  DOMINANT_PRINCIPAL_BAND,
  DOMINANT_FUNDS_IN,
  DOMINANT_FUNDS_OUT,
  NATIVE_CHANNEL,
  MIN_POINTS_TO_REDEEM,
  MAX_POINTS_TO_REDEEM,
  
  
  COUNT(SNDCUSTOMER_KEY) AS CUSTOMERS,
  SUM(R12_REVENUE) AS REVENUE,
  SUM(R12_TXNS) AS TXNS 
  FROM  CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL 
  WHERE MTH_YR IN (SELECT DISTINCT MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level ORDER BY MTH_YR DESC LIMIT 1)
  GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,
  18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42`;




var sql_command_12 = `CREATE OR REPLACE TABLE CEF_GROWTH_RATE_CUST_LEVEL_T1  AS
WITH CUSTOMER_FLAGS AS(
SELECT
 distinct 
DATE(CEM.MTH_YR) AS MTH_YR,
CEM.SNDCUSTOMER_KEY,
CV.SUPER_REGION AS REGION,
CEM.COUNTRY_CODE,
CV.COUNTRY_NAME,
GEO.DMA AS CUSTOMER_DMA,

CASE WHEN CEM.HVC_FLAG = 'N' THEN 'N' ELSE 'Y' END AS HVC_FLAG,

CASE WHEN CEM.FLAG_CONTACTABLE = 'N' THEN 'Not Contactable'
     ELSE 'Contactable' END FLAG_CONTACTABLE,
CASE WHEN CEM.FLAG_MARKETABLE = 'N' THEN 'Not Marketable'
     ELSE 'Marketable' END AS FLAG_MARKETABLE,
     
CASE WHEN CEM.EMAIL_MARKETABLE = 'Y' AND CEM.SMS_MARKETABLE = 'N' THEN 'Email Only ' 
     WHEN CEM.SMS_MARKETABLE = 'Y' AND CEM.EMAIL_MARKETABLE = 'N' THEN 'SMS Only'
     WHEN CEM.SMS_MARKETABLE = 'Y' AND CEM.EMAIL_MARKETABLE = 'Y' THEN 'SMS + Email'
     ELSE 'Non Marketable' END AS EMAIL_SMS_MARKETABLE,

CASE WHEN CEM.LOYALTY_MEMBER_FLAG = 'Y' THEN 'MyWU-Member' ELSE 'Non-Member' END AS LOYALTY_MEMBER,

CEM.BEATS,
CEM.R12_APP_TXNS,
CEM.R12_WEBSITE_TXNS,
CEM.R12_DOMINANT_CHANNEL,

CEM.R1_TXNS,
CEM.R12_TXNS,
CEM.R2_TO_R13_TXNS,
CEM.R48_TXNS,
ENG.PRICE_SENSITIVE,
ENG.NATIVE_CHANNEL,


CASE WHEN CEM.R1_TXNS > 0 AND CEM.R2_TO_R13_TXNS=0 AND CEM.R14_TO_R25_TXNS = 0  AND CEM.R26_TO_R37_TXNS=0 AND CEM.R38_TO_R49_TXNS=0 THEN 'Y' ELSE 'N' END AS AQUISITION,
CASE WHEN CEM.R1_TXNS > 0 AND CEM.R2_TO_R13_TXNS=0 AND (CEM.R14_TO_R25_TXNS > 0 OR CEM.R26_TO_R37_TXNS > 0 OR CEM.R38_TO_R49_TXNS>0) THEN 'Y' ELSE 'N' END AS WINBACK,
CASE WHEN CEM.R12_TXNS = 0 AND  CEM.R2_TO_R13_TXNS > 0 THEN 'Y' ELSE 'N' END AS CHURN,

CASE WHEN CEM.R12_TXNS > 0 THEN  'Y' ELSE 'N' END AS R12_ACTIVE,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN RFM_R13.RFM_PERSONA ELSE RFM_CM.RFM_PERSONA END AS RFM__PERSONA,

CASE WHEN CEM.R12_TXNS > 0  THEN RFM_CM.CHURN_DECILE  END AS CHURN_EQUAL_DENSITY__DECILE,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN RFM_R13.RFM_DECILE ELSE RFM_CM.RFM_DECILE END AS RFM__DECILE,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.R12_DOMINANT_CHANNEL ELSE CEM.R12_DOMINANT_CHANNEL END AS DOMINANT_CHANNEL,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_PRINCIPAL_BAND ELSE DOM_CM.DOMINANT_PRINCIPAL_BAND END AS DOMINANT_PRINCIPAL__BAND,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_ATTRBUTE_FUNDS_IN ELSE DOM_CM.DOMINANT_ATTRBUTE_FUNDS_IN END AS DOMINANT_FUNDS__IN,
CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_ATTRBUTE_FUNDS_OUT ELSE DOM_CM.DOMINANT_ATTRBUTE_FUNDS_OUT END AS DOMINANT_FUNDS__OUT,

CASE WHEN (CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.R12_DOMINANT_CHANNEL ELSE CEM.R12_DOMINANT_CHANNEL END) = 'RETAIL'  THEN 
          CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN UPPER(NVL(DOM_R13.DOMINANT_AGENT_NETWORK_2,DOM_R13.DOMINANT_AGENT_BUSINESS_NAME)) 
          ELSE UPPER(NVL(DOM_CM.DOMINANT_AGENT_NETWORK_2,DOM_CM.DOMINANT_AGENT_BUSINESS_NAME)) END 
     ELSE 'NA' END AS DOMINANT_AGENT,
 
CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_CORRIDOR ELSE DOM_CM.DOMINANT_CORRIDOR END AS DOMINANT__CORRIDOR,
CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_CORRIDOR_NAME ELSE DOM_CM.DOMINANT_CORRIDOR_NAME END AS DOMINANT__CORRIDOR_NAME,
CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN DOM_R13.DOMINANT_CORRIDOR_TYPE ELSE DOM_CM.DOMINANT_CORRIDOR_TYPE END AS DOMINANT__CORRIDOR_TYPE,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.WEB_APP_FLAG ELSE CEM.WEB_APP_FLAG END AS WEB_APP__FLAG,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.RETAIL_DIGITAL_FLAG ELSE CEM.RETAIL_DIGITAL_FLAG END AS RETAIL_DIGITAL__FLAG,

CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.R1_REVENUE ELSE CEM.R1_REVENUE END AS R1__REVENUE,
CASE WHEN CEM.R12_TXNS = 0 AND CEM.R2_TO_R13_TXNS > 0 THEN CEM_R13.R1_TXNS ELSE CEM.R1_TXNS END AS R1__TXNS

FROM (SELECT C.*, DATEADD(MONTH,-12, DATE(MTH_YR)) AS R12_MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level C) CEM 
LEFT JOIN CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level CEM_R13 ON CEM.SNDCUSTOMER_KEY = CEM_R13.SNDCUSTOMER_KEY AND CEM_R13.MTH_YR = CEM.R12_MTH_YR

LEFT JOIN (SELECT C.*, DATEADD(MONTH,-12, DATE(MTH_YR)) AS R12_MTH_YR FROM CEX_SANDBOX.SK_DOMINANCY_METRICS C) DOM_CM ON CEM.SNDCUSTOMER_KEY = DOM_CM.SNDCUSTOMER_KEY AND DATE(CEM.MTH_YR) = DATE(DOM_CM.MTH_YR)
LEFT JOIN CEX_SANDBOX.SK_DOMINANCY_METRICS DOM_R13 ON CEM.SNDCUSTOMER_KEY = DOM_R13.SNDCUSTOMER_KEY AND DOM_R13.MTH_YR = CEM.R12_MTH_YR

LEFT JOIN (SELECT C.*, DATEADD(MONTH,-12, DATE(MTH_YR)) AS R12_MTH_YR FROM CEX_SANDBOX.SK_CONSOLIDATED_PROPENSITY_SCORES C) RFM_CM ON CEM.SNDCUSTOMER_KEY = RFM_CM.SNDCUSTOMER_KEY AND DATE(RFM_CM.MTH_YR) = DATE(CEM.MTH_YR)
LEFT JOIN CEX_SANDBOX.SK_CONSOLIDATED_PROPENSITY_SCORES RFM_R13 ON CEM.SNDCUSTOMER_KEY = RFM_R13.SNDCUSTOMER_KEY AND DATE(RFM_R13.MTH_YR) = CEM.R12_MTH_YR

LEFT JOIN CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL ENG ON CEM.SNDCUSTOMER_KEY = ENG.SNDCUSTOMER_KEY AND ENG.MTH_YR = CEM.MTH_YR

LEFT JOIN ( SELECT
				CUSTOMER_KEY,
                OPT_SHARE,
				HVC_FLAG,
                LOYALTY_MEMBER_FLAG,
				NVL(STATE,'N/A') AS STATE,
				NVL(CITY,'N/A') AS CITY,
				NVL(ZIP_CODE,'N/A') AS ZIP_CODE,
				NVL(ZIP.DMA_CODE,'N/A') AS DMA_CODE,
				NVL(DMA_DESC,'N/A') AS DMA         
				FROM SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM 
                LEFT JOIN SUMMARY_GEN.DMA_ZIPCODE_VW ZIP ON CM.ZIP_POSTAL_CODE = ZIP.ZIP_CODE
				LEFT JOIN SUMMARY_GEN.DMA_VW DMA ON ZIP.DMA_CODE = DMA.DMA_CODE) GEO ON CEM.SNDCUSTOMER_KEY = GEO.CUSTOMER_KEY
LEFT JOIN SUMMARY_GEN.COUNTRY_VW CV ON CV.COUNTRY_CODE = CEM.COUNTRY_CODE
                
WHERE CEM.MTH_YR IN (SELECT DISTINCT MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level ORDER BY MTH_YR DESC LIMIT 13)
 )

SELECT 
CF.*,
CASE WHEN R12_ACTIVE = 'Y' AND CHURN_EQUAL_DENSITY__DECILE IN (1,2,3,4,5,6,7,8) THEN '2.Low-Risk' 
     WHEN R12_ACTIVE = 'Y' AND CHURN_EQUAL_DENSITY__DECILE IN (9,10)  THEN '1.High-Risk'
     ELSE 
           CASE WHEN R12_ACTIVE = 'Y' AND CF.BEATS IN ('On Schedule','Ahead Schedule','1 beat late','2 beats late') THEN '2.Low-Risk'
                WHEN R12_ACTIVE = 'Y' AND CF.BEATS IN ('3 beats late','4 beats late','5 beats plus late') THEN '1.High-Risk'
                ELSE 
                     CASE WHEN R12_ACTIVE = 'Y' AND RFM__PERSONA IN ('7.LOST','5.SPORADICS','6.SLIPPING') THEN '1.High-Risk'
                          WHEN R12_ACTIVE = 'Y' AND RFM__PERSONA IN ('4.WHALES','2.ENGAGED','1.LOYALS','3.PROMISING','8.ONE AND DONES') THEN '2.Low-Risk'
                     ELSE '4: NA' END
                END
END AS CHURN__RISK,

CASE WHEN RFM__DECILE IN (1,2,3) THEN '3.Low-Value'
     WHEN RFM__DECILE IN (4,5,6) THEN '2.Medium-Value'
     WHEN RFM__DECILE IN (7,8,9,10) THEN '1.High-Value'
     WHEN RFM__DECILE IN (999) THEN '4.NA'
     ELSE '4.NA' END AS VALUED_SEGMENT_RFM,
     
CASE WHEN DOMINANT__CORRIDOR IN (SELECT DISTINCT PRICE_CHURN_CORRIDOR FROM CEX_SANDBOX.PRICE_CHURN_SCORE_TABLE)
//'US-DO','US-JM','US-EC','US-PK','US-US','US-HN','US-SV','US-AR','US-HT','US-PH','US-MX','US-CO'
AND (CF.R12_APP_TXNS + CF.R12_WEBSITE_TXNS) > 1 
      AND CF.R12_DOMINANT_CHANNEL IN ('WEBSITE','APP')
      AND CF.COUNTRY_CODE = 'US' OR CF.COUNTRY_CODE = 'CA' OR CF.COUNTRY_CODE = 'FR'  THEN 'Y' END AS PRICE_CHURN_BASE,

CASE WHEN CHURN__RISK = '1.High-Risk' THEN 'Y' ELSE 'N' END AS RISK_OF_CHURN,
CASE WHEN DOMINANT__CORRIDOR IN (SELECT DISTINCT PRICE_CHURN_CORRIDOR FROM CEX_SANDBOX.PRICE_CHURN_SCORE_TABLE )//'US-DO','US-JM','US-EC','US-PK','US-US','US-HN','US-SV','US-AR','US-HT','US-PH','US-MX','US-CO') 
  AND CF.PRICE_SENSITIVE = 'Y' THEN 'Y' ELSE 'N' END AS RISK_OF_PRICE_CHURN
FROM CUSTOMER_FLAGS CF`;
  


var sql_command_13 = `CREATE OR REPLACE TABLE CEF_GROWTH_RATE_CUST_LEVEL AS
SELECT T1.* , 
CASE WHEN TXN.PRICING_CHANNEL IN ('POS','TMT','AIR') THEN 'RETAIL' 
     WHEN TXN.PRICING_CHANNEL IN ('WEB','APP') THEN 'DIGITAL' END AS FIRST_TXN_CHANNEL
FROM CEF_GROWTH_RATE_CUST_LEVEL_T1 T1
LEFT JOIN(
Select SNDCUSTOMER_KEY , PRICING_CHANNEL                    
from 
(Select 
     SNDCUSTOMER_KEY,PRICING_CHANNEL,
     ROW_NUMBER() OVER (PARTITION BY SNDCUSTOMER_KEY ORDER BY RCVPAYING_DATETIME) AS TRANS_RNK
     FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW T2 
      )
     WHERE TRANS_RNK = 1) TXN
ON T1.SNDCUSTOMER_KEY = TXN.SNDCUSTOMER_KEY
Where T1.MTH_YR IN (SELECT DISTINCT MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level ORDER BY MTH_YR DESC LIMIT 1)`;





var sql_command_14 = `CREATE OR REPLACE TABLE CEF_GROWTH_RATE_CUST_LEVEL_DATA_AGGREGATED AS 
WITH AWC_AGGREGATED AS (
SELECT 
AWC.COUNTRY_CODE,
AWC.REGION,
AWC.COUNTRY_NAME,
AWC.MTH_YR,

CASE WHEN NVL(RFM__PERSONA,'5.SPORADICS') = '1.UBER' THEN '1.LOYALS'
     WHEN NVL(RFM__PERSONA,'5.SPORADICS') = '2.LOYALS' THEN '2.ENGAGED' 
     ELSE NVL(RFM__PERSONA,'5.SPORADICS') END AS RFM_PERSONA,
     
CUSTOMER_DMA,
DOMINANT__CORRIDOR AS DOMINANT_CORRIDOR,
DOMINANT__CORRIDOR_NAME AS DOMINANT_CORRIDOR_NAME,
DOMINANT__CORRIDOR_TYPE AS DOMINANT_CORRIDOR_TYPE,
DOMINANT_PRINCIPAL__BAND AS DOMINANT_PRINCIPAL_BAND,
DOMINANT_FUNDS__IN AS DOMINANT_FUNDS_IN,
DOMINANT_FUNDS__OUT AS DOMINANT_FUNDS_OUT,
DOMINANT_AGENT,
DOMINANT_CHANNEL,
FIRST_TXN_CHANNEL,
NATIVE_CHANNEL,
FLAG_CONTACTABLE,
EMAIL_SMS_MARKETABLE,
LOYALTY_MEMBER,
CASE WHEN RETAIL_DIGITAL__FLAG = 'Digital_only' THEN 'Digital Only'
     WHEN RETAIL_DIGITAL__FLAG = 'Retail_only' THEN 'Retail Only'
     WHEN RETAIL_DIGITAL__FLAG = 'Retail+Digital' THEN 'Retail+Digital'
     WHEN RETAIL_DIGITAL__FLAG = 'R12_INACTIVE' THEN 'R12 Inactive'
     ELSE 'NA'  END AS RETAIL_DIGITAL_FLAG,
     
CASE WHEN WEB_APP__FLAG = 'App_Only' THEN 'APP Only'
     WHEN WEB_APP__FLAG = 'Retail_only' THEN 'Retail Only'
     WHEN WEB_APP__FLAG = 'Website_Only' THEN 'WEB Only'
     WHEN WEB_APP__FLAG = 'Website+App' THEN 'WEB+APP'
     WHEN WEB_APP__FLAG = 'R12_INACTIVE' THEN 'R12 Inactive'
     ELSE 'NA'  END AS WEB_APP_FLAG,
CHURN__RISK,
CASE WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '1. HR-HV'
     WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '2. HR-MV'
     WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '3. HR-LV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '4. LR-HV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '5. LR-MV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '6. LR-LV'
     ELSE '0. NA' END AS RISK_VALUE_SEGMENT,

NVL(BEATS,'No IPF') AS IPF_BEATS,

AWC.REGION||' | '||AWC.COUNTRY_CODE||' | '||DOMINANT_CORRIDOR||' | '||DOMINANT_AGENT||' | '||RFM_PERSONA||' | '||DOMINANT_CHANNEL||' | '||RISK_VALUE_SEGMENT AS MICRO_SEGMENT,

COUNT(CASE WHEN AQUISITION = 'Y' THEN SNDCUSTOMER_KEY END) AS AQUISITION,
COUNT(CASE WHEN WINBACK = 'Y' THEN SNDCUSTOMER_KEY END) AS WINBACK,
COUNT(CASE WHEN CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS CHURNS,
COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R12_ACTIVE,
COUNT(CASE WHEN RISK_OF_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS RISK_OF_CHURN,
COUNT(CASE WHEN PRICE_CHURN_BASE = 'Y' THEN SNDCUSTOMER_KEY END) AS PRICE_CHURN_BASE,
COUNT(CASE WHEN RISK_OF_PRICE_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS RISK_OF_PRICE_CHURN
     
FROM CEF_GROWTH_RATE_CUST_LEVEL  AWC 

GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
ORDER BY R12_ACTIVE DESC)

, COUNTRY_LEVEL AS (
SELECT
  AWC.COUNTRY_CODE,
  
  COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R12_ACTIVES,
  COUNT(CASE WHEN PRICE_CHURN_BASE = 'Y' THEN SNDCUSTOMER_KEY END) AS PRICE_CHURN_CX,
  COUNT(CASE WHEN RISK_OF_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS ATRISK_OF_CHURN,
  COUNT(CASE WHEN RISK_OF_PRICE_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS ATRISK_OF_PRICE_CHURN,
  CASE WHEN R12_ACTIVES > 0 THEN ATRISK_OF_CHURN/R12_ACTIVES END AS PERC_RISK_OF_CHURN,
  CASE WHEN PRICE_CHURN_CX > 0 THEN ATRISK_OF_PRICE_CHURN/PRICE_CHURN_CX END AS PERC_RISK_OF_PRICE_CHURN
  

  FROM CEF_GROWTH_RATE_CUST_LEVEL AWC 
  LEFT JOIN SUMMARY_GEN.COUNTRY_VW CC ON AWC.COUNTRY_CODE = CC.COUNTRY_CODE

  GROUP BY 1
  ORDER BY R12_ACTIVES DESC 
)

SELECT 
AWC.*,
PERC_RISK_OF_CHURN AS CNTRY_PC_CHURN,
PERC_RISK_OF_PRICE_CHURN AS CNTRY_PC_PRICE_CHURN
FROM AWC_AGGREGATED AWC
LEFT JOIN COUNTRY_LEVEL CN ON AWC.COUNTRY_CODE = CN.COUNTRY_CODE`;





var sql_command_15 = `CREATE OR REPLACE TABLE CEF_AGENTS_AND_NETWORKS_NAMES AS
SELECT 

AGENT_NUMBER,

NETWORK_DESC,

NETWORK_NAME,

NET_AGENT_NAME,
AGENT_NAME,

CASE WHEN CONTAINS(NETWORK_NAME, '#') > 0 THEN SUBSTR(NETWORK_NAME, 1, POSITION('#', NETWORK_NAME, 1)-1) ELSE NETWORK_NAME END AS AGENT_NAME_CLEANED,
CASE WHEN AGENT_SUMM.NETWORK_DESC IS NULL OR AGENT_SUMM.NETWORK_DESC = 'NULL' THEN AGENT_SUMM.NETWORK_NAME ELSE AGENT_MAST.NET_AGENT_NAME END AS ENROL_NETWORK_DESC,
CASE WHEN (ENROL_NETWORK_DESC = '' OR ENROL_NETWORK_DESC IS NULL) AND (AGENT_NAME_CLEANED IS NULL OR AGENT_NAME_CLEANED = ' ' OR AGENT_NAME_CLEANED = '  ') THEN NVL(ENROL_NETWORK_DESC,NVL(AGENT_NAME,NET_AGENT_NAME)) 
     WHEN AGENT_NAME_CLEANED =  '  ' OR AGENT_NAME_CLEANED =  ' ' THEN ENROL_NETWORK_DESC
     ELSE COALESCE(UPPER(AGENT_NAME_CLEANED),NET_AGENT_NAME) END AS AGENT_NETWORK_NAME_CLEANED, 
AGENT_SUMM.DMA_DESC
FROM SUMMARY_GEN.AGENT_MASTER_VW AGENT_MAST
INNER JOIN SUMMARY_GEN.AGENT_SUMMARY_VW AGENT_SUMM ON AGENT_MAST.AGENT_ID = AGENT_SUMM.AGENT_NUMBER`;


var sql_command_16 = `CREATE OR REPLACE TABLE SJ_MEASUREMENT_CUST_LEVEL AS
with SJ_MEASUREMENT_CUST_LEVEL_1 AS
(
Select
GRW.MTH_YR,
GRW.SNDCUSTOMER_KEY,
GRW.REGION,
GRW.COUNTRY_CODE,
GRW.COUNTRY_NAME,
GRW.DOMINANT__CORRIDOR,
  
CASE WHEN GRW.DOMINANT_CHANNEL IN ('APP', 'WEBSITE') THEN 'Digital'
     WHEN GRW.DOMINANT_CHANNEL = 'RETAIL' THEN 'Retail'
     ELSE 'R12 Inactive' END AS DOMINANT_CHANNEL,
  
CASE 
WHEN GRW.CHURN = 'Y' then R12_DOM_IN_OUT.DOMINANT_PAY_IN_METHOD else CEF.DOMINANT_PAY_IN_METHOD
END AS DOMINANT_PAY_IN_METHOD,
CASE 
WHEN GRW.CHURN = 'Y' then R12_DOM_IN_OUT.DOMINANT_PAYOUT_METHOD else CEF.DOMINANT_PAYOUT_METHOD
END AS DOMINANT_PAYOUT_METHOD,

CASE WHEN GRW.CHURN = 'Y' then R12_DOM_IN_OUT.DOMINANT_ATTRBUTE_FUNDS_IN else CEF.DOMINANT_FUNDS_IN
END AS DOMINANT_FUNDS_IN,
  
CASE WHEN GRW.CHURN = 'Y' then R12_DOM_IN_OUT.DOMINANT_ATTRBUTE_FUNDS_OUT else CEF.DOMINANT_FUNDS_OUT
END AS DOMINANT_FUNDS_OUT,
  
CASE WHEN GRW.CHURN = 'Y' then R12_DOM_IN_OUT.DOMINANT_PRINCIPAL_BAND else CEF.DOMINANT_PRINCIPAL_BAND
END AS DOMINANT_PRINCIPAL_BAND,
  
GRW.RFM__PERSONA,
  
CASE WHEN GRW.R12_DOMINANT_CHANNEL IN ('APP', 'WEBSITE') THEN 'Digital'
     WHEN GRW.R12_DOMINANT_CHANNEL = 'RETAIL' THEN 'Retail'
     ELSE 'R12 Inactive' END AS R12_R1_DOMINANT_CHANNEL,
  
CASE WHEN R2_GRW.R12_DOMINANT_CHANNEL IN ('APP', 'WEBSITE') THEN 'Digital'
     WHEN R2_GRW.R12_DOMINANT_CHANNEL = 'RETAIL' THEN 'Retail'
     ELSE 'R12 Inactive' END AS R12_R2_DOMINANT_CHANNEL,
  
GRW.DOMINANT_AGENT,
CEF.NATIVE_CHANNEL, 
CASE 
WHEN GRW.CHURN = 'Y' then R12_CEF.NATIVE_CHANNEL else CEF.NATIVE_CHANNEL
END AS NATIVE_CHANNEL_FINAL,
  
R2_GRW.RFM__PERSONA AS R2_RFM_PERSONA,
DATEADD(MONTH,-1, DATE(GRW.MTH_YR)) as R2_RFM_MTH_YR,
  
GRW.CHURN__RISK,
  
IPF.IPF_CHANGE,
IPF.BEATS,

CASE 
WHEN GRW.CHURN = 'Y' then R12_IPF.IPF_CHANGE else IPF.IPF_CHANGE
END AS IPF_CHANGE_FINAL,
  
GRW.AQUISITION,
GRW.WINBACK,
GRW.CHURN,
GRW.RISK_OF_CHURN,
  
GRW.R12_ACTIVE,
R2_GRW.R12_ACTIVE AS R2_R12_ACTIVE,
  
GRW.RISK_OF_PRICE_CHURN,
GRW.PRICE_CHURN_BASE,
GRW.EMAIL_SMS_MARKETABLE,
GRW.FLAG_MARKETABLE,
GRW.VALUED_SEGMENT_RFM,
  
CASE WHEN CEF.ACTIVITY_STATUS = 'R1 ACTIVE'THEN 'Y' 
     ELSE 'N' END AS R1_ACTIVE,
     
CASE WHEN CEF.R1_TXNS > 0 AND CEF.R2_TO_R13_TXNS > 0 THEN 'Y'
     ELSE 'N' END AS R1_R13_ACTIVE,

CASE WHEN CEF.R2_TO_R13_TXNS > 0 THEN 'Y'
     ELSE 'N' END AS R2_R13_ACTIVE     

FROM CEX_SANDBOX.CEF_GROWTH_RATE_CUST_LEVEL_T1 GRW
  
LEFT JOIN CEX_SANDBOX.CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL  CEF ON GRW.SNDCUSTOMER_KEY = CEF.SNDCUSTOMER_KEY AND GRW.MTH_YR = CEF.MTH_YR

left join (select SNDCUSTOMER_KEY,DATE(MTH_YR) AS MTH_YR,NATIVE_CHANNEL FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL) R12_CEF
          ON GRW.SNDCUSTOMER_KEY = R12_CEF.SNDCUSTOMER_KEY AND GRW.MTH_YR = DATEADD(MONTH,-12, DATE(R12_CEF.MTH_YR))
  
left join RESP_IPF_CALC_T8_IPF_13_Months IPF ON GRW.SNDCUSTOMER_KEY = IPF.CUSTOMER_KEY AND GRW.MTH_YR = DATE(IPF.MTH_YR)
  
left join (select CUSTOMER_KEY,DATE(MTH_YR) AS MTH_YR,IPF_CHANGE,BEATS FROM RESP_IPF_CALC_T8_IPF_13_Months) R12_IPF 
          ON GRW.SNDCUSTOMER_KEY = R12_IPF.CUSTOMER_KEY AND GRW.MTH_YR = DATEADD(MONTH,-12, DATE(R12_IPF.MTH_YR))
  
LEFT JOIN CEX_SANDBOX.CEF_GROWTH_RATE_CUST_LEVEL_T1 R2_GRW ON GRW.SNDCUSTOMER_KEY = R2_GRW.SNDCUSTOMER_KEY AND R2_GRW.MTH_YR = DATEADD(MONTH,-1, DATE(GRW.MTH_YR))

LEFT JOIN (SELECT SNDCUSTOMER_KEY,MTH_YR,DOMINANT_PAY_IN_METHOD,DOMINANT_PAYOUT_METHOD,Dominant_principal_band,DOMINANT_ATTRBUTE_FUNDS_IN,DOMINANT_ATTRBUTE_FUNDS_OUT FROM CEX_SANDBOX.SK_DOMINANCY_METRICS) R12_DOM_IN_OUT
           ON GRW.SNDCUSTOMER_KEY = R12_DOM_IN_OUT.SNDCUSTOMER_KEY 
 AND R12_DOM_IN_OUT.MTH_YR = DATEADD(MONTH,-12, DATE(GRW.MTH_YR))
)
SELECT *,
CASE
WHEN R12_R1_DOMINANT_CHANNEL = 'R12 Inactive' THEN 'N' ELSE 'Y' END AS R1_ACTIVE_FLAG,
CASE
WHEN R12_R2_DOMINANT_CHANNEL = 'R12 Inactive' THEN 'N' ELSE 'Y' END AS R2_ACTIVE_FLAG,
  
CASE
WHEN R2_ACTIVE_FLAG = 'Y' AND R1_ACTIVE_FLAG = 'N' THEN 'Y' ELSE 'N' END AS ATTRITED_FLAG
FROM SJ_MEASUREMENT_CUST_LEVEL_1`;





var sql_command_17 = `CREATE OR REPLACE TABLE CEF_MEASUREMENT_CUST_LEVEL_DATA_AGGREGATED AS 
WITH TOP_COUNTRIES AS (
SELECT 
REGION, MTH_YR, COUNTRY_CODE, 
COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R12_ACTIVE,
ROW_NUMBER() OVER (PARTITION BY REGION, MTH_YR ORDER BY COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) DESC) AS COUNTRY_RANK
FROM SJ_MEASUREMENT_CUST_LEVEL 
WHERE REGION IS NOT NULL
GROUP BY 1,2,3
),

TOP_CORRIDORS AS (
SELECT REGION,MTH_YR,COUNTRY_CODE,DOMINANT__CORRIDOR,
COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R12_ACTIVE,
ROW_NUMBER() OVER (PARTITION BY REGION,MTH_YR,COUNTRY_CODE ORDER BY COUNT(CASE WHEN R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) DESC) AS CORRIDOR_RANK
FROM SJ_MEASUREMENT_CUST_LEVEL
WHERE REGION IS NOT NULL
GROUP BY 1,2,3,4
)

SELECT
AWC.REGION,
CASE
WHEN TC.COUNTRY_RANK <= 10 THEN AWC.COUNTRY_CODE
ELSE 'Others'END AS COUNTRY_CODE,
CASE
WHEN TC.COUNTRY_RANK <= 10 THEN AWC.COUNTRY_NAME
ELSE 'Others'END AS COUNTRY_NAME,

AWC.MTH_YR,

CASE
WHEN TC.COUNTRY_RANK <= 10 AND TR.CORRIDOR_RANK <= 10 THEN AWC.DOMINANT__CORRIDOR
WHEN TC.COUNTRY_RANK <= 10 THEN 'Other Corridors'
ELSE 'Others'END AS DOMINANT_CORRIDOR,

DOMINANT_CHANNEL,
DOMINANT_FUNDS_IN,
DOMINANT_FUNDS_OUT,
DOMINANT_PRINCIPAL_BAND,

RFM__PERSONA AS RFM_PERSONA,
R2_RFM_PERSONA, 

R12_R1_DOMINANT_CHANNEL,
R12_R2_DOMINANT_CHANNEL,


R1_ACTIVE_FLAG,
R2_ACTIVE_FLAG,

ATTRITED_FLAG,

DOMINANT_PAY_IN_METHOD,
DOMINANT_PAYOUT_METHOD,

--DOMINANT_AGENT,
NATIVE_CHANNEL_FINAL, 

CASE 
WHEN DOMINANT_PAY_IN_METHOD = 'BANK ACCOUNT' AND DOMINANT_PAYOUT_METHOD = 'MOBILE PAYOUT' THEN 'Bank-Mobile'
WHEN DOMINANT_PAY_IN_METHOD = 'BANK ACCOUNT' AND DOMINANT_PAYOUT_METHOD = 'CASH PAYOUT' THEN 'Bank-Cash'
WHEN DOMINANT_PAY_IN_METHOD = 'BANK ACCOUNT' AND DOMINANT_PAYOUT_METHOD = 'ACCOUNT PAYOUT' THEN 'Bank-Account'
WHEN DOMINANT_PAY_IN_METHOD = 'BANK ACCOUNT' AND DOMINANT_PAYOUT_METHOD = 'OTHER PAYOUT' THEN 'Bank-Other_types'

WHEN DOMINANT_PAY_IN_METHOD = 'CASH' AND DOMINANT_PAYOUT_METHOD = 'MOBILE PAYOUT' THEN 'Cash-Mobile'
WHEN DOMINANT_PAY_IN_METHOD = 'CASH' AND DOMINANT_PAYOUT_METHOD = 'CASH PAYOUT' THEN 'Cash-Cash'
WHEN DOMINANT_PAY_IN_METHOD = 'CASH' AND DOMINANT_PAYOUT_METHOD = 'OTHER PAYOUT' THEN 'Cash-Other_types'
WHEN DOMINANT_PAY_IN_METHOD = 'CASH' AND DOMINANT_PAYOUT_METHOD = 'ACCOUNT PAYOUT' THEN 'Cash-Account'

WHEN DOMINANT_PAY_IN_METHOD = 'CREDIT CARD/DEBIT CARD' AND DOMINANT_PAYOUT_METHOD = 'ACCOUNT PAYOUT' THEN 'Card-Account'
WHEN DOMINANT_PAY_IN_METHOD = 'CREDIT CARD/DEBIT CARD' AND DOMINANT_PAYOUT_METHOD = 'OTHER PAYOUT' THEN 'Card-Other_types'
WHEN DOMINANT_PAY_IN_METHOD = 'CREDIT CARD/DEBIT CARD' AND DOMINANT_PAYOUT_METHOD = 'CASH PAYOUT' THEN 'Card-Cash'
WHEN DOMINANT_PAY_IN_METHOD = 'CREDIT CARD/DEBIT CARD' AND DOMINANT_PAYOUT_METHOD = 'MOBILE PAYOUT' THEN 'Card-Mobile'
else 'N/A' END AS PAYIN_PAYOUT_METHOD,


FLAG_MARKETABLE,
EMAIL_SMS_MARKETABLE,
IPF_CHANGE,
CHURN__RISK AS CHURN__RISK,

CASE 
  when ATTRITED_FLAG = 'Y' then '10.ATTRITED' 
  else CONCAT(0,RFM_PERSONA)
  END AS R1_RFM_PERSONA_1,
  
CONCAT(0,R2_RFM_PERSONA) AS R2_RFM_PERSONA_1,
  
CASE WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '1. HR-HV'
     WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '2. HR-MV'
     WHEN  CHURN__RISK = '1.High-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '3. HR-LV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '1.High-Value' THEN '4. LR-HV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '2.Medium-Value' THEN '5. LR-MV'
     WHEN  CHURN__RISK = '2.Low-Risk' AND VALUED_SEGMENT_RFM = '3.Low-Value' THEN '6. LR-LV'
     ELSE '0. NA' END AS RISK_VALUE_SEGMENT,


COUNT(CASE WHEN AQUISITION = 'Y' THEN SNDCUSTOMER_KEY END) AS AQUISITION,
COUNT(CASE WHEN WINBACK = 'Y' THEN SNDCUSTOMER_KEY END) AS WINBACK,
COUNT(CASE WHEN CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS CHURNS,
COUNT(CASE WHEN AWC.R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R12_ACTIVE,
COUNT(CASE WHEN AWC.R2_R12_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R2_R12_ACTIVE,
COUNT(CASE WHEN RISK_OF_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS RISK_OF_CHURN,
COUNT(CASE WHEN PRICE_CHURN_BASE = 'Y' THEN SNDCUSTOMER_KEY END) AS PRICE_CHURN_BASE,
COUNT(CASE WHEN RISK_OF_PRICE_CHURN = 'Y' THEN SNDCUSTOMER_KEY END) AS RISK_OF_PRICE_CHURN,
COUNT(CASE WHEN R1_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R1_ACTIVE,
COUNT(CASE WHEN R1_R13_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R1_R13_ACTIVE,
COUNT(CASE WHEN R2_R13_ACTIVE = 'Y' THEN SNDCUSTOMER_KEY END) AS R2_R13_ACTIVE
     
FROM SJ_MEASUREMENT_CUST_LEVEL AWC
LEFT JOIN TOP_COUNTRIES TC
ON AWC.REGION = TC.REGION AND AWC.COUNTRY_CODE = TC.COUNTRY_CODE AND AWC.MTH_YR = TC.MTH_YR

LEFT JOIN TOP_CORRIDORS TR
ON AWC.REGION = TR.REGION AND AWC.COUNTRY_CODE = TR.COUNTRY_CODE AND 
   AWC.DOMINANT__CORRIDOR = TR.DOMINANT__CORRIDOR AND AWC.MTH_YR = TR.MTH_YR
   
WHERE AWC.REGION IS NOT NULL 
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27
ORDER BY R12_ACTIVE DESC`;



var sql_command_18 = `CREATE OR REPLACE TABLE CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_1  AS
SELECT
distinct 
  CEM.SNDCUSTOMER_KEY,
  DATE(CEM.MTH_YR) AS MTH_YR,
  CEM.COUNTRY_CODE,
  NVL(SUPER_REGION,'N/A') AS REGION,
  CN.COUNTRY_NAME,
  DOMINANT_CORRIDOR,
  CEM.RETAIL_DIGITAL_FLAG ,
  R12_DOMINANT_CHANNEL,
  CASE WHEN CD.OPT_SHARE = 'I' THEN 'Y' ELSE 'N' END AS OPT_3RD_PARTY,
   CASE WHEN R12_APP_TXNS > 0 THEN 'Y' ELSE 'N' END AS APP_MARKETABLE_FLAG,
  CASE WHEN EMAIL_MARKETABLE = 'Y' AND SMS_MARKETABLE = 'N' THEN 'Email Only' 
       WHEN SMS_MARKETABLE = 'Y' AND EMAIL_MARKETABLE = 'N' THEN 'SMS Only'
       WHEN SMS_MARKETABLE = 'Y' AND EMAIL_MARKETABLE = 'Y' THEN 'SMS + Email'
       ELSE 'Non Marketable' END AS EMAIL_SMS_MARKETABLE,
       
  CASE WHEN APP_MARKETABLE_FLAG = 'Y' AND OPT_3RD_PARTY = 'Y' THEN 'APP + Social'
       WHEN APP_MARKETABLE_FLAG = 'Y' AND OPT_3RD_PARTY = 'N' THEN 'APP Only'
       WHEN APP_MARKETABLE_FLAG = 'N' AND OPT_3RD_PARTY = 'Y' THEN 'Social Only'
       ELSE 'Non Marketable' END AS APP_SOCIAL_MEDIA_MARKETABLE,
  CASE
  WHEN R12_DOMINANT_CHANNEL = 'R12_INACTIVE' THEN 'N' ELSE 'Y' END AS R12_FLAG,
  CEM.NEW_EXISTING_FLAG,
  days_since_last_txn,
  R12_REVENUE,
  R12_PRINCIPAL,
  r12_txns,
  DOMINANT_ATTRBUTE_FUNDS_IN AS DOMINANT_FUNDS_IN,
  DOMINANT_ATTRBUTE_FUNDS_OUT AS DOMINANT_FUNDS_OUT,
  DOMINANT_PRINCIPAL_BAND ,
  CEM.FLAG_MARKETABLE,
  CASE 
  when R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then '10.ATTRITED' 
  WHEN RFM.RFM_PERSONA IS NULL THEN '09.NO PERSONA'
  else CONCAT(0,RFM.RFM_PERSONA)
  END AS CURRENT_PERSONA,
  CASE 
  WHEN RFM12.RFM_PERSONA IS NULL THEN '09.NEW CUSTOMERS'                            
  ELSE CONCAT(0,RFM12.RFM_PERSONA)
  END AS R12_PERSONA,   
  DATEADD(MONTH,-12, DATE(CEM.MTH_YR)) AS PREVIOUS_MTH
  FROM CEX_SANDBOX.YN_VA_KPI_2020_OUTPUT_ENGAGEMENT_CUST_LEVEL CEM
  LEFT JOIN SUMMARY_GEN.COUNTRY_VW CN ON CEM.COUNTRY_CODE = CN.COUNTRY_CODE
  LEFT JOIN CEX_SANDBOX.SK_CONSOLIDATED_PROPENSITY_SCORES RFM ON RFM.SNDCUSTOMER_KEY = CEM.SNDCUSTOMER_KEY AND RFM.MTH_YR = CEM.MTH_YR
  LEFT JOIN CEX_SANDBOX.SK_CONSOLIDATED_PROPENSITY_SCORES RFM12 ON RFM12.SNDCUSTOMER_KEY = CEM.SNDCUSTOMER_KEY AND RFM12.MTH_YR = DATEADD(MONTH,-12, DATE(CEM.MTH_YR))
  LEFT JOIN CEX_SANDBOX.SK_DOMINANCY_METRICS DOM ON CEM.SNDCUSTOMER_KEY = DOM.SNDCUSTOMER_KEY AND CEM.MTH_YR = DOM.MTH_YR
  LEFT JOIN (SELECT
				CUSTOMER_KEY,
                OPT_SHARE,
				HVC_FLAG,
                LOYALTY_MEMBER_FLAG,
				NVL(STATE,'N/A') AS STATE,
				NVL(CITY,'N/A') AS CITY,
				NVL(ZIP_CODE,'N/A') AS ZIP_CODE,
				NVL(ZIP.DMA_CODE,'N/A') AS DMA_CODE,
				NVL(DMA_DESC,'N/A') AS DMA
			 FROM SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM 
                LEFT JOIN SUMMARY_GEN.DMA_ZIPCODE_VW ZIP ON CM.ZIP_POSTAL_CODE = ZIP.ZIP_CODE
				LEFT JOIN SUMMARY_GEN.DMA_VW DMA ON ZIP.DMA_CODE = DMA.DMA_CODE) CD ON CEM.SNDCUSTOMER_KEY = CD.CUSTOMER_KEY
  Where CEM.MTH_YR IN (SELECT DISTINCT MTH_YR FROM CEX_SANDBOX.YN_Va_kpi_2020_output_engagement_cust_level ORDER BY MTH_YR DESC LIMIT 13) 
  Order by 1,2`;


var sql_command_19 = `create or replace  table CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA as
  WITH CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_2 AS 
 (
 SELECT CEM.*,
   
  CASE 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_DOM.DOMINANT_ATTRBUTE_FUNDS_IN else CEM.DOMINANT_FUNDS_IN
  END AS DOMINANT_FUNDS__IN,
  
   CASE 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_DOM.DOMINANT_ATTRBUTE_FUNDS_OUT else CEM.DOMINANT_FUNDS_OUT
  END AS DOMINANT_FUNDS__OUT,
  
  CASE 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_DOM.DOMINANT_PRINCIPAL_BAND else CEM.DOMINANT_PRINCIPAL_BAND
  END AS DOMINANT_PRINCIPAL__BAND,
   
  CASE 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_DOM.DOMINANT_CORRIDOR else CEM.DOMINANT_CORRIDOR
  END AS FINAL_DOMINANT_CORRIDOR,
  case 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_CHANNEL.OLD_R12_DOMINANT_CHANNEL else R12_DOMINANT_CHANNEL
  end as FINAL_DOMINANT_METHOD,
  
  CASE WHEN FINAL_DOMINANT_METHOD IN ('APP', 'WEBSITE') THEN 'Digital'
	   WHEN FINAL_DOMINANT_METHOD = 'RETAIL' THEN 'Retail'
	   ELSE 'R12 Inactive' END AS FINAL_DOMINANT_CHANNEL,
  

  case 
  WHEN CEM.R12_DOMINANT_CHANNEL = 'R12_INACTIVE' then R12_CHANNEL.OLD_R12_RETAIL_DIGITAL_FLAG else CEM.RETAIL_DIGITAL_FLAG   
  end as FINAL_NATIVE_CHANNEL
  
 FROM CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_1 CEM
 
 LEFT JOIN (SELECT SNDCUSTOMER_KEY,MTH_YR,DOMINANT_CORRIDOR,DOMINANT_ATTRBUTE_FUNDS_IN,DOMINANT_ATTRBUTE_FUNDS_OUT,DOMINANT_PRINCIPAL_BAND FROM CEX_SANDBOX.SK_DOMINANCY_METRICS)R12_DOM 
 ON CEM.SNDCUSTOMER_KEY = R12_DOM.SNDCUSTOMER_KEY 
 AND R12_DOM.MTH_YR = DATEADD(MONTH,-12, DATE(CEM.MTH_YR))
 
 left join (SELECT SNDCUSTOMER_KEY,MTH_YR,R12_DOMINANT_CHANNEL AS OLD_R12_DOMINANT_CHANNEL,RETAIL_DIGITAL_FLAG as OLD_R12_RETAIL_DIGITAL_FLAG
            FROM CEX_SANDBOX.YN_VA_KPI_2020_OUTPUT_ENGAGEMENT_CUST_LEVEL)R12_CHANNEL
 ON CEM.SNDCUSTOMER_KEY = R12_CHANNEL.SNDCUSTOMER_KEY 
 AND R12_CHANNEL.MTH_YR = DATEADD(MONTH,-12, DATE(CEM.MTH_YR))
 )
 
 SELECT
    SNDCUSTOMER_KEY,
    MTH_YR,
    COUNTRY_CODE,
    REGION,COUNTRY_NAME,
    FINAL_DOMINANT_CORRIDOR,
    FINAL_DOMINANT_CHANNEL,
    FINAL_NATIVE_CHANNEL,
    DOMINANT_PRINCIPAL__BAND AS DOMINANT_PRINCIPAL_BAND,
    DOMINANT_FUNDS__IN AS DOMINANT_FUNDS_IN,
    DOMINANT_FUNDS__OUT AS DOMINANT_FUNDS_OUT,
    FLAG_MARKETABLE,
    EMAIL_SMS_MARKETABLE,
    APP_SOCIAL_MEDIA_MARKETABLE,
    NEW_EXISTING_FLAG,
    R12_FLAG,
    CURRENT_PERSONA,
    days_since_last_txn,
    R12_REVENUE,
    R12_PRINCIPAL,
    r12_txns,
    PREVIOUS_MTH,R12_PERSONA
 FROM
    CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA_2`;



var sql_command_20 = `CREATE OR REPLACE TABLE CUSTOMER_ENGAGEMENT_FRAMEWORK_COMPETITOR_PRICE_FX_RAW_DATA AS
SELECT 
DATE_TRUNC('Month',REPORT_DATE) AS MONTH,
CASE WHEN MONTH = $R13_End_date THEN 'CURRENT' ELSE 'HISTORIC' END AS PERIOD, 
COMPETITOR, 
SUPER_REGION AS REGION,
SNDCOUNTRY_CODE||'-'||RCVCOUNTRY_CODE AS CORRIDOR,
RCVCOUNTRY_CODE,
COUNTRY_NAME AS RCV_COUNTRY_NAME,
SNDCURRENCY_CODE||'-'||RCVCURRENCY_CODE AS CURRENCY_PAIR,
RCVCURRENCY_CODE, 
FUNDING, 
PAYOUT, 
TO_NUMBER(SNDPRINCIPAL) AS SNDPRINCIPAL, 
ROUND(MEDIAN(MED_FX_COST),5) AS MED_FX_SPREAD, 
ROUND(MEDIAN(MED_FEE_TO_ADD),2) AS MED_FEE_TO_ADD 
FROM SUMMARY_GEN.PRC_COMPETITOR_FXC_DETAIL_HISTORY_V01 PRC
LEFT JOIN SUMMARY_GEN.COUNTRY_VW CC ON PRC.RCVCOUNTRY_CODE = CC.COUNTRY_CODE
WHERE SNDCOUNTRY_CODE = 'US' 
AND RCVCOUNTRY_CODE in ('CO','PK','HT','HN','EC','SV','AR','JM','DO','PH','US','MX','IN','GT','CN','NI','PE','UA','TR','VN') 
AND COMPETITOR IN ('Xoom','WorldRemit','Ria','MoneyGram','Remitly')
AND MED_FEE_TO_ADD <= 0.1 * SNDPRINCIPAL 
AND MED_FEE_TO_ADD >= 0 
AND REPORT_DATE >= DATEADD(MONTH,1,$R13_Start_date) 
AND REPORT_DATE <= LAST_DAY(DATE($R13_End_date)) 
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12

UNION

SELECT
    DATE_TRUNC('MONTH',TO_DATE(RECORD_DATETIME))AS MONTH,
	CASE WHEN MONTH = $R13_End_date THEN 'CURRENT' ELSE 'HISTORIC' END AS PERIOD, 
	'Western Union' AS COMPETITOR,
	SUPER_REGION AS REGION,
	SNDCOUNTRY_CODE||'-'||RCVCOUNTRY_CODE AS CORRIDOR,
	RCVCOUNTRY_CODE,
	COUNTRY_NAME AS RCV_COUNTRY_NAME,
	SNDCURRENCY_CODE||'-'||(CASE WHEN RCVCURRENCY_CODE = 'MXP' THEN 'MXN' ELSE RCVCURRENCY_CODE END) AS CURRENCY_PAIR,
	RCVCURRENCY_CODE,
    CASE WHEN SUB_PAYIN_TYPE IN ('DebitCard','CREDIT CARD/DEBIT CARD','DEBIT CARD') THEN 'Debit Card' 
         WHEN SUB_PAYIN_TYPE IN ('POLi','E-Wallet') THEN 'Mobile Wallet' 
         WHEN SUB_PAYIN_TYPE IN ('CreditCard','CREDIT CARD') THEN 'Credit Card'
         WHEN SUB_PAYIN_TYPE IN ('CASH') THEN 'Cash'
         ELSE 'Bank Account' END AS FUNDING,
    CASE WHEN SUB_PAYOUT_TYPE IN ('Debit Card','CREDIT CARD/DEBIT CARD','DEBIT CARD') THEN 'Debit Card' 
         WHEN SUB_PAYOUT_TYPE IN ('Home Delivery','CASH','Cash') THEN 'Cash'
         WHEN SUB_PAYOUT_TYPE IN ('POLi','E-Wallet') THEN 'Mobile Wallet' 
         ELSE 'Bank Account' END AS PAYOUT,
	CASE 
     WHEN SNDPRINCIPAL_USD <= 10 THEN 10
	 WHEN SNDPRINCIPAL_USD > 10 AND SNDPRINCIPAL_USD <= 50 THEN 50
     WHEN SNDPRINCIPAL_USD > 50 AND SNDPRINCIPAL_USD <= 100 THEN 100
     WHEN SNDPRINCIPAL_USD > 100 AND SNDPRINCIPAL_USD <= 200 THEN 200
     WHEN SNDPRINCIPAL_USD > 200 AND SNDPRINCIPAL_USD <= 300 THEN 300
     WHEN SNDPRINCIPAL_USD > 300 AND SNDPRINCIPAL_USD <= 500 THEN 500
     WHEN SNDPRINCIPAL_USD > 500 AND SNDPRINCIPAL_USD <= 1000 THEN 1000
     WHEN SNDPRINCIPAL_USD > 1000 AND SNDPRINCIPAL_USD <= 2000 THEN 2000
     WHEN SNDPRINCIPAL_USD > 2000 AND SNDPRINCIPAL_USD <= 5000 THEN 5000
     WHEN SNDPRINCIPAL_USD > 5000 AND SNDPRINCIPAL_USD <= 10000 THEN 10000
	 WHEN SNDPRINCIPAL_USD > 10000 AND SNDPRINCIPAL_USD <= 15000 THEN 15000
	 WHEN SNDPRINCIPAL_USD > 15000 AND SNDPRINCIPAL_USD <= 20000 THEN 20000
	 WHEN SNDPRINCIPAL_USD > 20000 AND SNDPRINCIPAL_USD <= 25000 THEN 25000
	 WHEN SNDPRINCIPAL_USD > 25000 AND SNDPRINCIPAL_USD <= 50000 THEN 50000
	 WHEN SNDPRINCIPAL_USD > 50000 AND SNDPRINCIPAL_USD <= 75000 THEN 75000
	 WHEN SNDPRINCIPAL_USD > 75000 AND SNDPRINCIPAL_USD <= 100000 THEN 100000
	 WHEN SNDPRINCIPAL_USD > 150000 AND SNDPRINCIPAL_USD <= 200000 THEN 200000
	 WHEN SNDPRINCIPAL_USD > 200000 AND SNDPRINCIPAL_USD <= 250000 THEN 250000
	 WHEN SNDPRINCIPAL_USD > 250000 AND SNDPRINCIPAL_USD <= 500000 THEN 500000
	 WHEN SNDPRINCIPAL_USD > 500000 AND SNDPRINCIPAL_USD <= 750000 THEN 750000
	 WHEN SNDPRINCIPAL_USD > 750000 AND SNDPRINCIPAL_USD <= 1000000 THEN 1000000
     ELSE 1000001
	END AS SNDPRINCIPAL,
    ROUND(MEDIAN(NET_FOREIGN_EXCHANGE),2) MED_FX_SPREAD,
    ROUND(MEDIAN(TOTAL_CHARGES_USD),2) MED_FEE_TO_ADD

	FROM
		SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN
    LEFT JOIN SUMMARY_GEN.COUNTRY_VW CC ON TXN.RCVCOUNTRY_CODE = CC.COUNTRY_CODE
	WHERE
		RCVPAYING_DATETIME >= DATEADD(MONTH,1,$R13_Start_date) AND 
		RCVPAYING_DATETIME <= LAST_DAY(DATE($R13_End_date)) AND   
		SNDCOUNTRY_CODE IN ('US') AND 
		RCVCOUNTRY_CODE IN ('CO','PK','HT','HN','EC','SV','AR','JM','DO','PH','US','MX','IN','GT','CN','NI','PE','UA','TR','VN')
        AND PRICING_CHANNEL IN ('WEB', 'APP')
        
     GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12`;



var sql_command_21 = `CREATE OR REPLACE TABLE CHURN_ANALYSIS_COMPETITOR_FEE_FX_PRICING_DATA AS

SELECT
'FEE' AS COMPONENT,
MONTH,
PERIOD,
REGION,
CORRIDOR,
RCVCOUNTRY_CODE,
RCV_COUNTRY_NAME,
CURRENCY_PAIR,
FUNDING,
PAYOUT,
SNDPRINCIPAL,
SUM(CASE WHEN COMPETITOR = 'MoneyGram' THEN MED_FEE_TO_ADD END) AS MONEYGRAM, 
SUM(CASE WHEN COMPETITOR = 'Xoom' THEN MED_FEE_TO_ADD END) AS XOOM, 
SUM(CASE WHEN COMPETITOR = 'WorldRemit' THEN MED_FEE_TO_ADD END) AS WORLDREMIT, 
SUM(CASE WHEN COMPETITOR = 'Remitly' THEN MED_FEE_TO_ADD END) AS REMITLY, 
SUM(CASE WHEN COMPETITOR = 'Ria' THEN MED_FEE_TO_ADD END) AS RIA, 
SUM(CASE WHEN COMPETITOR = 'Western Union' THEN MED_FEE_TO_ADD END) AS WESTERN_UNION,

MONEYGRAM-WESTERN_UNION AS DEL_MONEYGRAM,
XOOM-WESTERN_UNION AS DEL_XOOM,
WORLDREMIT-WESTERN_UNION AS DEL_WORLDREMIT,
REMITLY-WESTERN_UNION AS DEL_REMITLY,
RIA-WESTERN_UNION AS DEL_RIA,

CASE WHEN WESTERN_UNION > 0 THEN  DEL_MONEYGRAM/WESTERN_UNION ELSE 0 END PERCDEL_MONEYGRAM,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_XOOM/WESTERN_UNION ELSE 0 END PERCDEL_XOOM,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_WORLDREMIT/WESTERN_UNION ELSE 0 END PERCDEL_WORLDREMIT,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_REMITLY/WESTERN_UNION ELSE 0 END PERCDEL_REMITLY,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_RIA/WESTERN_UNION ELSE 0 END PERCDEL_RIA

FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_COMPETITOR_PRICE_FX_RAW_DATA
GROUP BY 1,2,3,4,5,6,7,8,9,10,11

UNION

SELECT 
'FX' AS COMPONENT,
MONTH,
PERIOD,

REGION,
CORRIDOR,
RCVCOUNTRY_CODE,
RCV_COUNTRY_NAME,
CURRENCY_PAIR,
FUNDING,
PAYOUT,
SNDPRINCIPAL,
SUM(CASE WHEN COMPETITOR = 'MoneyGram' THEN MED_FX_SPREAD END) AS MONEYGRAM, 
SUM(CASE WHEN COMPETITOR = 'Xoom' THEN MED_FX_SPREAD END) AS XOOM, 
SUM(CASE WHEN COMPETITOR = 'WorldRemit' THEN MED_FX_SPREAD END) AS WORLDREMIT, 
SUM(CASE WHEN COMPETITOR = 'Remitly' THEN MED_FX_SPREAD END) AS REMITLY, 
SUM(CASE WHEN COMPETITOR = 'Ria' THEN MED_FX_SPREAD END) AS RIA, 
SUM(CASE WHEN COMPETITOR = 'Western Union' THEN MED_FX_SPREAD END) AS WESTERN_UNION,

MONEYGRAM-WESTERN_UNION AS DEL_MONEYGRAM,
XOOM-WESTERN_UNION AS DEL_XOOM,
WORLDREMIT-WESTERN_UNION AS DEL_WORLDREMIT,
REMITLY-WESTERN_UNION AS DEL_REMITLY,
RIA-WESTERN_UNION AS DEL_RIA,

CASE WHEN WESTERN_UNION > 0 THEN  DEL_MONEYGRAM/WESTERN_UNION ELSE 0 END PERCDEL_MONEYGRAM,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_XOOM/WESTERN_UNION ELSE 0 END PERCDEL_XOOM,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_WORLDREMIT/WESTERN_UNION ELSE 0 END PERCDEL_WORLDREMIT,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_REMITLY/WESTERN_UNION ELSE 0 END PERCDEL_REMITLY,
CASE WHEN WESTERN_UNION > 0 THEN  DEL_RIA/WESTERN_UNION ELSE 0 END PERCDEL_RIA

FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_COMPETITOR_PRICE_FX_RAW_DATA
GROUP BY 1,2,3,4,5,6,7,8,9,10,11`;





var sql_command_22 = `CREATE OR REPLACE TABLE OMNITURE_SESSION_LEVEL_ADS_FINAL_SS1 AS
SELECT DISTINCT DATE_TRUNC(MONTH,DATE(SESSION_START_DT)) AS MTH_YR,A.CUSTOMER_KEY,
CASE WHEN B.CUSTOMER_KEY IS NULL THEN A.CUSTOMER_KEY ELSE B.CUSTOMER_KEY END AS CUSTOMER_ID_GEN 
FROM OMNITURE_SESSION_LEVEL_ADS_FINAL A
LEFT JOIN  SUMMARY_GEN.WUDNA_ACCOUNT_MASTER_VW B  ON A.CUSTOMER_KEY = B.CUSTOMER_UMN`;



var sql_command_23 = `CREATE OR REPLACE TABLE OMNITURE_SESSION_LEVEL_ADS_FINAL_SS AS
SELECT A.*,CUSTOMER_ID_GEN FROM OMNITURE_SESSION_LEVEL_ADS_FINAL A
LEFT JOIN OMNITURE_SESSION_LEVEL_ADS_FINAL_SS1 B ON A.CUSTOMER_KEY = B.CUSTOMER_KEY
WHERE A.CUSTOMER_KEY IS NOT NULL  AND A.CUSTOMER_KEY <> ' '
  AND A.SESSION_START_DT >= (DATEADD(MONTH,-5,DATE($R13_End_date))) AND A.SESSION_START_DT <= LAST_DAY(DATE($R13_End_date))`;



var sql_command_24 =
`CREATE OR REPLACE TABLE CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS AS
WITH R6_REGISTERED_CUSTOMERS AS (

SELECT
CUSTOMER_KEY,
PREFERRED_REGISTRATION_DATE AS REGISTRATION_DATE
FROM SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW
WHERE REGISTERED_CUSTOMER_FLAG = 'Y'
AND REGISTRATION_DATE >= DATEADD(MONTH,-5,DATE($R13_End_date)) AND REGISTRATION_DATE <= LAST_DAY(DATE($R13_End_date)) 
)
, CUSTOMER_TRANSACTIONS AS (
SELECT
C.CUSTOMER_KEY,
COUNT(S.SNDCUSTOMER_KEY) SND_TXNS,
COUNT(R.RCVCUSTOMER_KEY) RCV_TXNS
FROM R6_REGISTERED_CUSTOMERS C

LEFT JOIN 
(SELECT SNDCUSTOMER_KEY
  FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN 
  LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON TXN.SNDCUSTOMER_KEY = CM.CUSTOMER_KEY
       WHERE DATE(RCVPAYING_DATETIME) >= DATEADD(MONTH,-5,DATE($R13_End_date)) AND DATE(RCVPAYING_DATETIME) <= LAST_DAY(DATE($R13_End_date)) 
) S ON C.CUSTOMER_KEY = S.SNDCUSTOMER_KEY

LEFT JOIN 
(SELECT RCVCUSTOMER_KEY
  FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN 
  LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON TXN.SNDCUSTOMER_KEY = CM.CUSTOMER_KEY
       WHERE DATE(RCVPAYING_DATETIME) >= DATEADD(MONTH,-5,DATE($R13_End_date)) AND DATE(RCVPAYING_DATETIME) <= LAST_DAY(DATE($R13_End_date)) 
) R ON C.CUSTOMER_KEY = R.RCVCUSTOMER_KEY
GROUP BY 1
)
, RNT_CUSTOMERS AS (
SELECT 
CUSTOMER_KEY,
SND_TXNS,
RCV_TXNS,
CASE WHEN RCV_TXNS = 0 THEN 'N' ELSE 'Y' END AS RECEIVED_TXN
FROM CUSTOMER_TRANSACTIONS
WHERE SND_TXNS = 0  
)


SELECT
C.CUSTOMER_KEY,
CC.SUPER_REGION AS REGION,
CM.COUNTRY_CODE,
CC.COUNTRY_NAME,
LOYALTY_MEMBER_FLAG,
REGISTERED_CUSTOMER_FLAG,
DATE(PREFERRED_REGISTRATION_DATE) AS REGISTRATION_DATE,

CASE WHEN PREFERRED_REGISTRATION_CHANNEL IN ('WEB - R1','WEB - R3','WEB - R4','WEB') THEN 'WEB'
     WHEN PREFERRED_REGISTRATION_CHANNEL IN ('SmartPhone - R3','SmartPhone - R4') THEN 'APP'
     ELSE PREFERRED_REGISTRATION_CHANNEL
     END AS REGISTRATION_CHANNEL,

CASE WHEN PREFERRED_REGISTRATION_CHANNEL IN ('POS','CSC','TMT','Prepaid','Other') THEN 'RETAIL'
     WHEN PREFERRED_REGISTRATION_CHANNEL IN ('WEB - R1','WUPLUS','WEB - R3','WEB - R4','WEB','SmartPhone - R3','SmartPhone - R4') THEN 'DIGITAL'
     ELSE 'NA'
     END AS REG_CHANNEL_TYPE,

CASE WHEN OPT_SHARE = 'I' THEN 'Y' ELSE 'N' END AS OPT_3RD_PARTY,

CASE WHEN OPT_PARTNER_OFFERS = 'I' THEN 'Y' ELSE 'N' END AS OPT_PARTNER_OFFERS,
CASE WHEN (EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' OR  MOBILE_NUMBER_ON_FILE_FLAG = 'Y' ) THEN 'Y' ELSE 'N' END AS FLAG_CONTACTABLE,
CASE WHEN ((EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' AND OPT_EMAIL='I')

		OR  (MOBILE_NUMBER_ON_FILE_FLAG = 'Y' AND OPT_SMS = 'I' AND CM.COUNTRY_CODE NOT IN ('US','CA'))
		OR (MOBILE_NUMBER_ON_FILE_FLAG = 'Y' AND OPT_SMS = 'I' AND DOUBLE_OPT_SMS = 'I' AND CM.COUNTRY_CODE IN ('US','CA')) ) AND MARKETING_FLAG='Y'
			  THEN 'Y' ELSE 'N' END AS FLAG_MARKETABLE,
CASE WHEN EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' AND OPT_EMAIL = 'I' AND MARKETING_FLAG='Y' THEN 'Y' ELSE 'N' END AS EMAIL_MARKETABLE,

CASE WHEN ( (OPT_SMS = 'I' AND MOBILE_NUMBER_ON_FILE_FLAG ='Y' AND MARKETING_FLAG='Y' AND CM.COUNTRY_CODE NOT IN ('US','CA'))			
	OR (MOBILE_NUMBER_ON_FILE_FLAG = 'Y' AND OPT_SMS = 'I' AND DOUBLE_OPT_SMS = 'I' AND MARKETING_FLAG='Y' AND CM.COUNTRY_CODE IN ('US','CA')))
	THEN 'Y' ELSE 'N' END AS SMS_MARKETABLE,
DATEDIFF(MONTHS, REGISTRATION_DATE, LAST_DAY(DATE($R13_End_date))) AS TENURE_IN_MTH,
CASE WHEN TENURE_IN_MTH = 0 THEN 'R1'
     WHEN TENURE_IN_MTH > 0 AND TENURE_IN_MTH <= 2 THEN 'R2-R3'
     WHEN TENURE_IN_MTH > 2 AND TENURE_IN_MTH <= 5 THEN 'R4-R6'
     WHEN TENURE_IN_MTH > 5 AND TENURE_IN_MTH <= 11 THEN 'R7-R12'
     WHEN TENURE_IN_MTH > 11 AND TENURE_IN_MTH <= 23 THEN 'R13-R24'
     WHEN TENURE_IN_MTH > 23 THEN '25+ M'
     ELSE 'NA' END AS TENURE_BUCKET,
SND_TXNS,
RCV_TXNS,
RECEIVED_TXN
FROM RNT_CUSTOMERS C
LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON C.CUSTOMER_KEY = CM.CUSTOMER_KEY
LEFT JOIN SUMMARY_GEN.COUNTRY_VW CC ON CM.COUNTRY_CODE = CC.COUNTRY_CODE`;


var sql_command_25 =
`CREATE OR REPLACE TABLE CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS_REFUND_OMNITURE AS 
WITH REFUND_RNT_CUSTOMERS AS (
SELECT 
C.CUSTOMER_KEY,
COUNT(TXN_ID) ATTEMPTED_TXNS,
COUNT(CASE WHEN REFUND_TRXN = 'Y' THEN TXN_ID END ) AS REFUND_TXNS,
COUNT(CASE WHEN PRICING_CHANNEL IN ('POS','AIR','TMT') AND REFUND_TRXN = 'Y' THEN TXN_ID END ) AS REFUND_TXNS_RETAIL,
COUNT(CASE WHEN PRICING_CHANNEL IN ('WEB','APP') AND REFUND_TRXN = 'Y' THEN TXN_ID END ) AS REFUND_TXNS_DIGITAL,
CASE WHEN REFUND_TXNS > 0 THEN 'Y' ELSE 'N' END REFUNDED_TXN
FROM CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS C
LEFT JOIN (
  SELECT *,DATE_TRUNC(MONTH,DATE(RCVPAYING_DATETIME)) AS TXN_MONTH  
  FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN 
  LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON TXN.SNDCUSTOMER_KEY = CM.CUSTOMER_KEY
       WHERE TXN_MONTH >= DATEADD(MONTH,-5,DATE($R13_End_date))  AND TXN_MONTH <= $R13_End_date ) T ON C.CUSTOMER_KEY = T.SNDCUSTOMER_KEY 
GROUP BY 1
),
Attempts_Base As (
Select 
A.* EXCLUDE(OPACKET_SC_CUSTOMERNUMBER),
CASE 
    WHEN ABANDONEDSTAGE = 'Abandoned Cart' THEN 'Abandoned Cart'
    WHEN PAYMENTRISKDECISION = 'PRD Declined' THEN 'PRD Declined'
    WHEN TRANSACTIONRISKDECISION IN ('Risk Declined','KYC Declined','DRT Declined') THEN TRANSACTIONRISKDECISION --'Risk Declined'
    WHEN BANK__DECISION = 'Bank Declined' OR BANK_FUNDED_DECISION IN ('Not Funded','Bank Funded Pending DRT Decision','Bank Funded KYC Declined','Bank Funded DRT Declined','Bank Funded Declined') or COMBINED = 'Bank Declined'THEN 'Bank Declined'
    WHEN RTRA_STAGE ='RTRA Declined' THEN 'RTRA Declined'
    WHEN RTRA_STAGE ='Refunded_Txn' THEN 'Refunded_Txn'
    WHEN RTRA_STAGE ='Canceled' THEN 'Canceled'
    ELSE 'Completed' END As Final_Stage

FROM
    WUDNA.CEX_SANDBOX.DIG_TXN_ATTEMPT_FINAL A where TXN_MONTH >= DATEADD(MONTH,-5,DATE($R13_End_date)) and TXN_MONTH <=  $R13_End_date and Final_Stage <> 'Completed'
),
Dominant_Friction As (
Select * from (
SELECT
    GID AS OPACKET_SC_CUSTOMERNUMBER,
    Final_Stage As Dominant_Friction_Stage,
    ROW_NUMBER () OVER (PARTITION BY OPACKET_SC_CUSTOMERNUMBER ORDER BY COUNT(DISTINCT OPACKET_SC_CUSTOMERNUMBER), MAX(TXN_DATE) desc) AS Latest
FROM Attempts_Base
GROUP BY 1,2
) Where Latest = 1),
OMNITURE_EVENTS AS (
SELECT 
  A.CUSTOMER_KEY,

  COUNT(
    CASE 
    WHEN TXN_START_EVENT = 1 THEN 1
    WHEN PAYOUT_LOAD_EVENT = 1 THEN 1
    WHEN PAYIN_LOAD_EVENT = 1 THEN 1
    WHEN RECEIVER_EVENT = 1 THEN 1
    WHEN PAYMENT_EVENT = 1 THEN 1
    WHEN REVIEW_EVENT = 1 THEN 1
    WHEN SUBMIT_TXN_EVENT = 1 THEN 1
    WHEN RECEIPT_EVENT = 1 THEN 1 END ) AS ATTEMPTS,
    --WHEN drop_off_page LIKE '%SEND-MONEY:%' THEN 1 END ) AS ATTEMPTS,
  COUNT(VISIT_ID) AS TOTAL_VISITS,
 
  COUNT(TXN_ID) AS TXN_COUNT
FROM OMNITURE_SESSION_LEVEL_ADS_FINAL_SS A


LEFT JOIN
  (SELECT 
     SNDCUSTOMER_KEY,
     RCVPAYING_DATETIME,
     TXN_ID
    FROM
    SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN
    LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON TXN.SNDCUSTOMER_KEY = CM.CUSTOMER_KEY
    WHERE
    RCVPAYING_DATETIME >= (DATEADD(MONTH,-5,DATE($R13_End_date))) AND RCVPAYING_DATETIME <= LAST_DAY(DATE($R13_End_date)) 
  ) C ON A.CUSTOMER_KEY = C.SNDCUSTOMER_KEY AND A.SESSION_START_DT <= C.RCVPAYING_DATETIME

  AND A.CUSTOMER_KEY IS NOT NULL  AND A.CUSTOMER_KEY <> ' '
  AND A.SESSION_START_DT >= (DATEADD(MONTH,-5,DATE($R13_End_date))) AND A.SESSION_START_DT <= LAST_DAY(DATE($R13_End_date)) 
GROUP BY 1)

SELECT
C.CUSTOMER_KEY,
REFUND_TXNS,
REFUND_TXNS_RETAIL,
REFUND_TXNS_DIGITAL,
REFUNDED_TXN,
Dominant_Friction_Stage,
NVL(ATTEMPTS,0) AS ATTEMPTS,
CASE WHEN ATTEMPTS > 0 OR Dominant_Friction_Stage IS NOT NULL THEN 'Y' ELSE 'N' END AS ATTEMTPED_TXN,
NVL(TOTAL_VISITS,0) AS TOTAL_VISITS,

NVL(TXN_COUNT,0) AS TXN_COUNT
FROM REFUND_RNT_CUSTOMERS C
LEFT JOIN OMNITURE_EVENTS O ON C.CUSTOMER_KEY = O.CUSTOMER_KEY
LEFT JOIN Dominant_Friction B ON B.OPACKET_SC_CUSTOMERNUMBER = C.CUSTOMER_KEY`;


 

var sql_command_26 =
`CREATE OR REPLACE TABLE CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS_SUMMARY AS
WITH FINALTABLE AS (SELECT
RNT.REGION,
RNT.COUNTRY_NAME,
RNT.COUNTRY_CODE,
REGISTRATION_CHANNEL,
REG_CHANNEL_TYPE,
REFUNDED_TXN,
ATTEMTPED_TXN,
Dominant_Friction_Stage,
CASE WHEN RNT.FLAG_CONTACTABLE = 'N' THEN 'Not Contactable'
     ELSE 'Contactable' END AS FLAG_CONTACTABLE,
     
CASE WHEN RNT.EMAIL_MARKETABLE = 'Y' AND RNT.SMS_MARKETABLE = 'N' THEN 'Email Only ' 
     WHEN RNT.SMS_MARKETABLE = 'Y' AND RNT.EMAIL_MARKETABLE = 'N' THEN 'SMS Only'
     WHEN RNT.SMS_MARKETABLE = 'Y' AND RNT.EMAIL_MARKETABLE = 'Y' THEN 'SMS + Email'
     
     ELSE 'Non Marketable' END AS EMAIL_SMS_MARKETABLE,

CASE WHEN RNT.OPT_3RD_PARTY = 'Y' THEN 'Y' ELSE 'N' END AS SOCIAL_MEDIA_MARKETABLE,

CASE WHEN RNT.LOYALTY_MEMBER_FLAG = 'Y' THEN 'Member' ELSE 'Non-Member' END AS MYWU_STATUS,
RNT.TENURE_BUCKET,
RNT.OPT_3RD_PARTY,
RNT.OPT_PARTNER_OFFERS,
RNT.RECEIVED_TXN,
COUNT(RNT.CUSTOMER_KEY) CUSTOMERS

FROM CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS RNT
LEFT JOIN CEM_CUSTOMER_ENGAGEMENT_FRAMEWORK_RNT_CUSTOMERS_REFUND_OMNITURE OMNI ON RNT.CUSTOMER_KEY = OMNI.CUSTOMER_KEY

WHERE RNT.REGION <> 'TESTING' AND RNT.REGION IS NOT NULL
AND REG_CHANNEL_TYPE <> 'NA'
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),

ADDED AS ( SELECT REGION AS RGN,COUNTRY_CODE AS CC,COUNT(CASE WHEN R6_TXNS > 0 THEN SNDCUSTOMER_KEY END) AS R6_ACTIVE FROM CUSTOMER_ENGAGEMENT_FRAMEWORK_CUST_LEVEL
         WHERE MTH_YR = $R13_End_date
         GROUP BY 1,2)
          
          SELECT *,ROW_NUMBER() OVER(PARTITION BY COUNTRY_CODE ORDER BY R6_ACTIVE DESC) AS ROWNUMBER,
          CASE WHEN REG_CHANNEL_TYPE = 'RETAIL' AND ATTEMTPED_TXN = 'Y' AND FLAG_CONTACTABLE = 'Contactable' AND REFUNDED_TXN ='N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '01.Retail - All Marketable'
          WHEN REG_CHANNEL_TYPE = 'RETAIL' AND ATTEMTPED_TXN  = 'Y' AND FLAG_CONTACTABLE = 'Contactable' AND REFUNDED_TXN ='N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'N' THEN '04.Retail - Non Social Media Marketable'
          WHEN REG_CHANNEL_TYPE = 'RETAIL' AND ATTEMTPED_TXN  = 'Y' AND FLAG_CONTACTABLE <> 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE = 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '07.Retail - Only Social MediaMarketable'
          WHEN REG_CHANNEL_TYPE = 'RETAIL' AND ATTEMTPED_TXN  ='Y'AND REFUNDED_TXN ='N' THEN '10.Retail - Refunded'
          WHEN REG_CHANNEL_TYPE = 'RETAIL' AND ATTEMTPED_TXN  = 'N' THEN '13.Retail - No Transaction'
          WHEN REG_CHANNEL_TYPE = 'RETAIL' THEN '16.Retail - Others'
          WHEN REGISTRATION_CHANNEL = 'APP' AND  ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE = 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '02.Digital APP- All Marketable'
          WHEN REGISTRATION_CHANNEL = 'APP' AND  ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE = 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'N' THEN '05.Digital APP- Non Social Media Marketable'
          WHEN REGISTRATION_CHANNEL = 'APP' AND  ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE <> 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE = 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '08.Digital APP- Only Social MediaMarketable'
          WHEN REGISTRATION_CHANNEL = 'APP' AND  ATTEMTPED_TXN  ='Y' AND REFUNDED_TXN = 'N' THEN '11.Digital APP- Refunded'
          WHEN REGISTRATION_CHANNEL = 'APP' AND  ATTEMTPED_TXN   = 'N' THEN '14.Digital APP- No Transaction'
          WHEN REGISTRATION_CHANNEL = 'APP'  THEN '17.Digital APP- Others'
          WHEN REGISTRATION_CHANNEL = 'WEB' AND ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE ='Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '03.Digital WEB- All Marketable'
          WHEN REGISTRATION_CHANNEL = 'WEB' AND ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE = 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE <> 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'N' THEN '06.Digital WEB- Non Social Media Marketable'
          WHEN REGISTRATION_CHANNEL = 'WEB' AND ATTEMTPED_TXN  ='Y' AND FLAG_CONTACTABLE <> 'Contactable' AND REFUNDED_TXN = 'N' AND EMAIL_SMS_MARKETABLE = 'Non Marketable' AND SOCIAL_MEDIA_MARKETABLE = 'Y' THEN '09.Digital WEB- Only Social MediaMarketable'
          WHEN REGISTRATION_CHANNEL = 'WEB' AND ATTEMTPED_TXN  ='Y' AND REFUNDED_TXN = 'N' THEN '12.Digital WEB- Refunded'
          WHEN REGISTRATION_CHANNEL = 'WEB' AND  ATTEMTPED_TXN ='Y' THEN '15.Digital WEB- No Transaction' 
          WHEN REGISTRATION_CHANNEL = 'WEB'  THEN '18.Digital WEB- Others' ELSE 'Others' END AS CATEGORY
          
          FROM FINALTABLE T1 LEFT JOIN ADDED T2 ON T1.COUNTRY_CODE = T2.CC`;



var sql_command_27 = `CREATE OR REPLACE TABLE R12_TRANSACTIONS_RAW AS
SELECT TXN.*,DATE_TRUNC(MONTH,DATE(RCVPAYING_DATETIME)) AS TXN_MONTH,
SNDCOUNTRY_CODE ||'-'|| RCVCOUNTRY_CODE AS CORRIDOR ,
SEND_COUNTRY_NAME ||'-'||RCV_COUNTRY_NAME AS CORRIDOR_NAME,
CASE WHEN PRICING_CHANNEL IN ('POS','TMT','AIR') THEN 'RETAIL' 
     WHEN PRICING_CHANNEL IN ('WEB','APP') THEN 'DIGITAL' END AS TXN_CHANNEL
     FROM SUMMARY_GEN.WUDNA_TXN_MASTER_ANALYTICS_VW TXN 
LEFT JOIN SUMMARY_GEN.WUDNA_CUSTOMER_MASTER_VW CM ON TXN.SNDCUSTOMER_KEY = CM.CUSTOMER_KEY
     WHERE TXN_MONTH >= DATEADD(MONTH,1,$R13_Start_date) AND TXN_MONTH < DATEADD(MONTH,1,$R13_End_date)`; 



var sql_command_28 = `CREATE OR REPLACE TABLE R12_FEE_FX_DATA AS 
( WITH CORRIDOR_TXNS AS (
SELECT 
CORRIDOR,
CORRIDOR_NAME,
SUM(CASE WHEN TXN_CHANNEL = 'RETAIL' THEN TOTAL_CHARGES_USD END) RETAIL_FEE,
SUM(CASE WHEN TXN_CHANNEL = 'RETAIL' THEN NET_FOREIGN_EXCHANGE END) RETAIL_FX,
SUM(CASE WHEN TXN_CHANNEL = 'RETAIL' THEN (TOTAL_CHARGES_USD + NET_FOREIGN_EXCHANGE) END) RETAIL_REVENUE,
SUM(CASE WHEN TXN_CHANNEL = 'RETAIL' THEN SNDPRINCIPAL_USD END) RETAIL_PRINCIPAL,
SUM(CASE WHEN TXN_CHANNEL = 'DIGITAL' THEN TOTAL_CHARGES_USD END) DIGITAL_FEE,
SUM(CASE WHEN TXN_CHANNEL = 'DIGITAL' THEN NET_FOREIGN_EXCHANGE END) DIGITAL_FX,
SUM(CASE WHEN TXN_CHANNEL = 'DIGITAL' THEN (TOTAL_CHARGES_USD + NET_FOREIGN_EXCHANGE) END) DIGITAL_REVENUE,
SUM(CASE WHEN TXN_CHANNEL = 'DIGITAL' THEN SNDPRINCIPAL_USD END) DIGITAL_PRINCIPAL
FROM R12_TRANSACTIONS_RAW
GROUP BY 1,2
)
SELECT
*,
DIV0(RETAIL_FEE,RETAIL_PRINCIPAL) AVG_FEE_RETAIL,
DIV0(RETAIL_FX,RETAIL_PRINCIPAL) AVG_FX_RETAIL,
DIV0(RETAIL_REVENUE,RETAIL_PRINCIPAL) AVG_REV_RETAIL,
DIV0(DIGITAL_FEE,DIGITAL_PRINCIPAL) AVG_FEE_DIGITAL,
DIV0(DIGITAL_FX,DIGITAL_PRINCIPAL) AVG_FX_DIGITAL,
DIV0(DIGITAL_REVENUE,DIGITAL_PRINCIPAL) AVG_REV_DIGITAL,
CASE WHEN AVG_FEE_RETAIL > AVG_FEE_DIGITAL THEN 'RETAIL' ELSE 'DIGITAL' END AS FEE,
CASE WHEN AVG_FX_RETAIL > AVG_FX_DIGITAL THEN 'RETAIL' ELSE 'DIGITAL' END AS FX,
CASE WHEN AVG_REV_RETAIL > AVG_REV_DIGITAL THEN 'RETAIL' ELSE 'DIGITAL' END AS REV,
CASE WHEN REV = 'DIGITAL' THEN 'RETAIL' ELSE 'DIGITAL' END AS RECOMMENDATION
FROM CORRIDOR_TXNS)`;


var sql_command_29 =  `CREATE OR REPLACE TABLE R2D_Model_Analysis_1 AS 
Select cc.country_code,cc.country_name,a.dominant_corridor,a.dominant_corridor_name,
FEE,FX,REV,RECOMMENDATION,count(1) total_cnt,count(distinct a.SNDCUSTOMER_KEY) total_cust,
count(distinct case when a.RETAIL_DIGITAL_FLAG='Retail_only' then a.SNDCUSTOMER_KEY end) total_retail_only_cust,
count(distinct case when a.R2D_Propensity=1 then a.SNDCUSTOMER_KEY end) High_R2D,
count(distinct case when a.R2D_MIGRATION=1 then a.SNDCUSTOMER_KEY end) R2D_Migrated
from
(Select a.SNDCUSTOMER_KEY,d.dominant_corridor,d.dominant_corridor_name,
b.RETAIL_DIGITAL_FLAG,d.DOMINANT_SNDCOUNTRY_CODE as country_code,
CASE WHEN b.R2D_DECILE in (9,10) THEN 1 else 0 end As R2D_Propensity,                                                                     
CASE WHEN c.SNDCUSTOMER_KEY is not null then 1 else 0 end AS R2D_MIGRATION,
e.FEE,e.FX,e.REV,e.RECOMMENDATION
from
(Select distinct SNDCUSTOMER_KEY ,SEND_COUNTRY_NAME AS COUNTRY_NAME from R12_TRANSACTIONS_RAW) a              

left outer join "WUDNA"."CEX_SANDBOX"."SK_CONSOLIDATED_PROPENSITY_SCORES" b on a.SNDCUSTOMER_KEY=b.SNDCUSTOMER_KEY and b.MTH_YR= $R13_End_date 
left outer join "WUDNA"."CEX_SANDBOX"."R2D_MONTHLY" c on a.SNDCUSTOMER_KEY=c.SNDCUSTOMER_KEY and DATE(c.MONTH_OF_DIGITIZATION) = $R13_End_date 
left outer join "WUDNA"."CEX_SANDBOX"."SK_DOMINANCY_METRICS" d ON a.SNDCUSTOMER_KEY =d.SNDCUSTOMER_KEY and d.MTH_YR= $R13_End_date 
left outer join R12_FEE_FX_DATA e on d.DOMINANT_CORRIDOR=e.CORRIDOR


) a
left outer join summary_gen.country_vw cc on cc.country_code = a.country_code
group by 1,2,3,4,5,6,7,8`;




var sql_command_30 = `create or replace table R2D_Model_Analysis as Select a.* ,b.region from R2D_Model_Analysis_1 a 
inner join (select distinct region,country_code from "WUDNA"."CEX_SANDBOX"."SK_CONSOLIDATED_PROPENSITY_SCORES") b on a.country_code =b.country_code
WHERE total_retail_only_cust > 500`;





var sql_command_31 = `CREATE OR REPLACE TABLE CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_AGGREGATED AS 
SELECT
MTH_YR,
REGION,
COUNTRY_CODE,
COUNTRY_NAME,
R12_FLAG,
FINAL_DOMINANT_CORRIDOR AS DOMINANT_CORRIDOR ,
case 
when COUNTRY_CODE in (SUBSTRING(FINAL_DOMINANT_CORRIDOR,1,2)) then FINAL_DOMINANT_CORRIDOR
when FINAL_DOMINANT_CORRIDOR is null then FINAL_DOMINANT_CORRIDOR
else 'others' end as DOMINANT_CORRIDOR_LOGIC,
FINAL_DOMINANT_CHANNEL AS DOMINANT_CHANNEL,
FINAL_NATIVE_CHANNEL AS NATIVE_CHANNEL,
DOMINANT_PRINCIPAL_BAND,
DOMINANT_FUNDS_IN,
DOMINANT_FUNDS_OUT,
R12_PERSONA,
CURRENT_PERSONA,
PREVIOUS_MTH,
FLAG_MARKETABLE,
EMAIL_SMS_MARKETABLE,
APP_SOCIAL_MEDIA_MARKETABLE,
NEW_EXISTING_FLAG,
COUNT(SNDCUSTOMER_KEY) AS CUSTOMERS,
SUM(r12_txns) AS TXN_COUNT,
SUM(R12_REVENUE) AS REVENUE,
SUM(R12_PRINCIPAL) AS PRINCIPAL,
SUM(days_since_last_txn) AS DAYS_SINCE_LAST_TXN
FROM CEF_MEASUREMENT_CUST_LEVEL_RFM_CHG_DATA
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19`;




  
  
var loop_list = 
            [sql_command_1,sql_command_2,sql_command_3,sql_command_4,sql_command_5,sql_command_6,sql_command_7,sql_command_8,sql_command_9,sql_command_10, 
			 sql_command_11,sql_command_12,sql_command_13,sql_command_14,sql_command_15,sql_command_16,sql_command_17,sql_command_18,sql_command_19,sql_command_20,          
			 sql_command_21,sql_command_22,sql_command_23,sql_command_24,sql_command_25,sql_command_26,sql_command_27,sql_command_28,sql_command_29,sql_command_30,  
			 sql_command_31];
        
        for(yr_i =0;yr_i < loop_list.length;yr_i++)
        {
                    try {
                snowflake.execute (
                    {sqlText: loop_list[yr_i]}
                                    )
                            }
            catch (err)  {
                return "Failed: " + err;   // Return a success/error indicator.
       
                         }
        };
    return "Stored Prcedure Completed Successfully"
    $$
    ;
  
   Call Customer_Engagement_Framework_Combined();
